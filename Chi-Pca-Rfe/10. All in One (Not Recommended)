{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"15qXMaDXFEcHIYjoGAu-RFQy8ESeKsTdF","timestamp":1704310045545}],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Import Data"],"metadata":{"id":"QnCE6nHdIP91"}},{"cell_type":"code","execution_count":1,"metadata":{"id":"TuRyi4N57nJy","executionInfo":{"status":"ok","timestamp":1705558723483,"user_tz":-360,"elapsed":2173,"user":{"displayName":"Abir Alam","userId":"14957206708268879320"}}},"outputs":[],"source":["import pandas as pd\n","from sklearn.preprocessing import MinMaxScaler\n","from scipy.stats import chi2_contingency"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"id":"-YJiM2MBqeWu","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1705558760286,"user_tz":-360,"elapsed":34400,"user":{"displayName":"Abir Alam","userId":"14957206708268879320"}},"outputId":"7f1b5e32-9440-426f-c320-52e06668692e"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["# Load the dataset\n","data = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Mental Health Research/main_dataset_mental_health.csv')\n","data = data.drop(columns=[\"Depression Level\", 'score'])\n","data.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":407},"id":"o7UMMcjM8F4-","executionInfo":{"status":"error","timestamp":1705558765331,"user_tz":-360,"elapsed":936,"user":{"displayName":"Abir Alam","userId":"14957206708268879320"}},"outputId":"9980cfd5-7777-4a51-a794-8210b9527a0a"},"execution_count":3,"outputs":[{"output_type":"error","ename":"FileNotFoundError","evalue":"[Errno 2] No such file or directory: '/content/drive/MyDrive/Colab Notebooks/Mental Health Research/main_dataset_mental_health.csv'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-3-402a3088076c>\u001b[0m in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# Load the dataset\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'/content/drive/MyDrive/Colab Notebooks/Mental Health Research/main_dataset_mental_health.csv'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"Depression Level\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'score'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/util/_decorators.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    209\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    210\u001b[0m                     \u001b[0mkwargs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mnew_arg_name\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnew_arg_value\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 211\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    212\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    213\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mcast\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mF\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mwrapper\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/util/_decorators.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    329\u001b[0m                     \u001b[0mstacklevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mfind_stack_level\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    330\u001b[0m                 )\n\u001b[0;32m--> 331\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    332\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    333\u001b[0m         \u001b[0;31m# error: \"Callable[[VarArg(Any), KwArg(Any)], Any]\" has no\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36mread_csv\u001b[0;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, squeeze, prefix, mangle_dupe_cols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, error_bad_lines, warn_bad_lines, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options)\u001b[0m\n\u001b[1;32m    948\u001b[0m     \u001b[0mkwds\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkwds_defaults\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    949\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 950\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0m_read\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    951\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    952\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m_read\u001b[0;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[1;32m    603\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    604\u001b[0m     \u001b[0;31m# Create the parser.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 605\u001b[0;31m     \u001b[0mparser\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mTextFileReader\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    606\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    607\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mchunksize\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0miterator\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, f, engine, **kwds)\u001b[0m\n\u001b[1;32m   1440\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1441\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhandles\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mIOHandles\u001b[0m \u001b[0;34m|\u001b[0m \u001b[0;32mNone\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1442\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_make_engine\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mengine\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1443\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1444\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mclose\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/parsers/readers.py\u001b[0m in \u001b[0;36m_make_engine\u001b[0;34m(self, f, engine)\u001b[0m\n\u001b[1;32m   1733\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0;34m\"b\"\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mmode\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1734\u001b[0m                     \u001b[0mmode\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0;34m\"b\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1735\u001b[0;31m             self.handles = get_handle(\n\u001b[0m\u001b[1;32m   1736\u001b[0m                 \u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1737\u001b[0m                 \u001b[0mmode\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/io/common.py\u001b[0m in \u001b[0;36mget_handle\u001b[0;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\u001b[0m\n\u001b[1;32m    854\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mencoding\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0;34m\"b\"\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    855\u001b[0m             \u001b[0;31m# Encoding\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 856\u001b[0;31m             handle = open(\n\u001b[0m\u001b[1;32m    857\u001b[0m                 \u001b[0mhandle\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    858\u001b[0m                 \u001b[0mioargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmode\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: '/content/drive/MyDrive/Colab Notebooks/Mental Health Research/main_dataset_mental_health.csv'"]}]},{"cell_type":"code","source":["data.shape[1]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kTNJYci74pFp","executionInfo":{"status":"ok","timestamp":1705508964091,"user_tz":-360,"elapsed":7,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"b40df42b-09f6-470a-e4dd-dc777eaa59ba"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["28"]},"metadata":{},"execution_count":160}]},{"cell_type":"markdown","source":["# Feature Selection and Extraction"],"metadata":{"id":"zxOIq27pITZ7"}},{"cell_type":"markdown","source":["## Chi-squared"],"metadata":{"id":"UERwakLs6Pbj"}},{"cell_type":"code","source":["# Separate the features and class label\n","X = data.iloc[:, :-1]\n","y = data.iloc[:, -1]\n","\n","# Normalize the features using MinMaxScaler\n","scaler = MinMaxScaler()\n","X_normalized = scaler.fit_transform(X)\n","\n","\n","# Convert the normalized features back to a dataframe\n","X_normalized = pd.DataFrame(X_normalized, columns=X.columns)\n","X = X_normalized\n","\n","# Compute the chi-square scores and p-values for each feature\n","scores, p_values = [], []\n","for i in range(X.shape[1]):\n","    obs = pd.crosstab(X.iloc[:, i], y)\n","    score, p_value, _, _ = chi2_contingency(obs)\n","    scores.append(score)\n","    p_values.append(p_value)\n","\n","\n","# Rank the features based on their chi-square scores\n","ranked_features = pd.DataFrame({'Feature': X.columns, 'Score': scores})\n","sorted_ranked_features = ranked_features.sort_values('Score', ascending=False).reset_index(drop=True)\n","\n","\n","sorted_ranked_features"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":896},"id":"4Q60X-l58z-M","executionInfo":{"status":"ok","timestamp":1705508965293,"user_tz":-360,"elapsed":1206,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"cf588a69-3e17-451c-9539-20ada99dc163"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                Feature       Score\n","0                      Loneliness Level  247.435520\n","1            Work-Personal Life Balance  186.114989\n","2              Hopefulness about Future  186.002659\n","3                 Self Confidence Level  177.003380\n","4              Desire to Escape Reality  163.966370\n","5                  Getting Upset Easily  154.757184\n","6   Suicidal Thoughts (Academic Stress)  138.575514\n","7                Overthinking Frequency  131.778706\n","8                 Surrounding Condition  127.675300\n","9                   Frequency of Crying  122.204248\n","10   Responsibility for Negative Events  121.646503\n","11                  Concentration Level  114.995256\n","12          Frequency of Death Thoughts  113.170325\n","13               Satisfaction on Result   94.065014\n","14           Cooperation Teachers/Peers   84.164415\n","15          Relationships with Siblings   81.715556\n","16                    Number of Friends   74.165250\n","17                    Academic Pressure   69.611500\n","18                  Communication Skill   68.163522\n","19            Relationship with Parents   67.696369\n","20                      Family Pressure   65.952508\n","21           Time Spent on Social Media   64.155746\n","22                        Syllabus Size   52.519023\n","23                         Food Quality   29.756192\n","24          Financial Support to Family   27.023690\n","25                  Family Expectations   25.725778\n","26          Receiving Financial Support   25.505827"],"text/html":["\n","  <div id=\"df-816cdef0-1d59-4f95-bbcc-0f5d19069db5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Feature</th>\n","      <th>Score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Loneliness Level</td>\n","      <td>247.435520</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Work-Personal Life Balance</td>\n","      <td>186.114989</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Hopefulness about Future</td>\n","      <td>186.002659</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Self Confidence Level</td>\n","      <td>177.003380</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Desire to Escape Reality</td>\n","      <td>163.966370</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Getting Upset Easily</td>\n","      <td>154.757184</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Suicidal Thoughts (Academic Stress)</td>\n","      <td>138.575514</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Overthinking Frequency</td>\n","      <td>131.778706</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Surrounding Condition</td>\n","      <td>127.675300</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Frequency of Crying</td>\n","      <td>122.204248</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Responsibility for Negative Events</td>\n","      <td>121.646503</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Concentration Level</td>\n","      <td>114.995256</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Frequency of Death Thoughts</td>\n","      <td>113.170325</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Satisfaction on Result</td>\n","      <td>94.065014</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Cooperation Teachers/Peers</td>\n","      <td>84.164415</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Relationships with Siblings</td>\n","      <td>81.715556</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Number of Friends</td>\n","      <td>74.165250</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>Academic Pressure</td>\n","      <td>69.611500</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>Communication Skill</td>\n","      <td>68.163522</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>Relationship with Parents</td>\n","      <td>67.696369</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>Family Pressure</td>\n","      <td>65.952508</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>Time Spent on Social Media</td>\n","      <td>64.155746</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>Syllabus Size</td>\n","      <td>52.519023</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>Food Quality</td>\n","      <td>29.756192</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>Financial Support to Family</td>\n","      <td>27.023690</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>Family Expectations</td>\n","      <td>25.725778</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>Receiving Financial Support</td>\n","      <td>25.505827</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-816cdef0-1d59-4f95-bbcc-0f5d19069db5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-816cdef0-1d59-4f95-bbcc-0f5d19069db5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-816cdef0-1d59-4f95-bbcc-0f5d19069db5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-39be1122-7667-4f10-b53f-2c8b62cc0887\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-39be1122-7667-4f10-b53f-2c8b62cc0887')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-39be1122-7667-4f10-b53f-2c8b62cc0887 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_a5b2afd0-d7e0-45fd-9f56-250187f361d7\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('sorted_ranked_features')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_a5b2afd0-d7e0-45fd-9f56-250187f361d7 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('sorted_ranked_features');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":161}]},{"cell_type":"code","source":["# Save the feature ranks to a CSV file\n","sorted_ranked_features.to_csv('feature_ranks_chi_square.csv', index=False)"],"metadata":{"id":"6ZLZQdOw-sDt"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Showing the dataset\n","df = pd.read_csv('/content/feature_ranks_chi_square.csv')\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":896},"id":"kt6Yk_Hw_D8W","executionInfo":{"status":"ok","timestamp":1705508965300,"user_tz":-360,"elapsed":123,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"aeaa9c22-352a-4e6c-f23a-aa747c86cc34"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                Feature       Score\n","0                      Loneliness Level  247.435520\n","1            Work-Personal Life Balance  186.114989\n","2              Hopefulness about Future  186.002659\n","3                 Self Confidence Level  177.003380\n","4              Desire to Escape Reality  163.966370\n","5                  Getting Upset Easily  154.757184\n","6   Suicidal Thoughts (Academic Stress)  138.575514\n","7                Overthinking Frequency  131.778706\n","8                 Surrounding Condition  127.675300\n","9                   Frequency of Crying  122.204248\n","10   Responsibility for Negative Events  121.646503\n","11                  Concentration Level  114.995256\n","12          Frequency of Death Thoughts  113.170325\n","13               Satisfaction on Result   94.065014\n","14           Cooperation Teachers/Peers   84.164415\n","15          Relationships with Siblings   81.715556\n","16                    Number of Friends   74.165250\n","17                    Academic Pressure   69.611500\n","18                  Communication Skill   68.163522\n","19            Relationship with Parents   67.696369\n","20                      Family Pressure   65.952508\n","21           Time Spent on Social Media   64.155746\n","22                        Syllabus Size   52.519023\n","23                         Food Quality   29.756192\n","24          Financial Support to Family   27.023690\n","25                  Family Expectations   25.725778\n","26          Receiving Financial Support   25.505827"],"text/html":["\n","  <div id=\"df-04117c56-1018-4b42-8387-dfd7cae319e9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Feature</th>\n","      <th>Score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Loneliness Level</td>\n","      <td>247.435520</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Work-Personal Life Balance</td>\n","      <td>186.114989</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Hopefulness about Future</td>\n","      <td>186.002659</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Self Confidence Level</td>\n","      <td>177.003380</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Desire to Escape Reality</td>\n","      <td>163.966370</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Getting Upset Easily</td>\n","      <td>154.757184</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Suicidal Thoughts (Academic Stress)</td>\n","      <td>138.575514</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Overthinking Frequency</td>\n","      <td>131.778706</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Surrounding Condition</td>\n","      <td>127.675300</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Frequency of Crying</td>\n","      <td>122.204248</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Responsibility for Negative Events</td>\n","      <td>121.646503</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Concentration Level</td>\n","      <td>114.995256</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Frequency of Death Thoughts</td>\n","      <td>113.170325</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Satisfaction on Result</td>\n","      <td>94.065014</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Cooperation Teachers/Peers</td>\n","      <td>84.164415</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Relationships with Siblings</td>\n","      <td>81.715556</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Number of Friends</td>\n","      <td>74.165250</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>Academic Pressure</td>\n","      <td>69.611500</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>Communication Skill</td>\n","      <td>68.163522</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>Relationship with Parents</td>\n","      <td>67.696369</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>Family Pressure</td>\n","      <td>65.952508</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>Time Spent on Social Media</td>\n","      <td>64.155746</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>Syllabus Size</td>\n","      <td>52.519023</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>Food Quality</td>\n","      <td>29.756192</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>Financial Support to Family</td>\n","      <td>27.023690</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>Family Expectations</td>\n","      <td>25.725778</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>Receiving Financial Support</td>\n","      <td>25.505827</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-04117c56-1018-4b42-8387-dfd7cae319e9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-04117c56-1018-4b42-8387-dfd7cae319e9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-04117c56-1018-4b42-8387-dfd7cae319e9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6e594229-dff8-4dd5-b80c-eea5ea621a79\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6e594229-dff8-4dd5-b80c-eea5ea621a79')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6e594229-dff8-4dd5-b80c-eea5ea621a79 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_8c01d597-0935-44c9-a46b-38f3b47a8165\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_8c01d597-0935-44c9-a46b-38f3b47a8165 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":163}]},{"cell_type":"code","source":["# Rearrange the dataset based on the feature ranks\n","rearranged_data = data[sorted_ranked_features['Feature'].tolist() + ['Label']]\n","\n","rearranged_data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":513},"id":"5LSzUYDY_HZH","executionInfo":{"status":"ok","timestamp":1705508965301,"user_tz":-360,"elapsed":119,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"1bdeea75-6456-4369-a348-8901df801d33"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Loneliness Level  Work-Personal Life Balance  Hopefulness about Future  \\\n","0                   4                           2                         5   \n","1                   4                           2                         1   \n","2                   3                           2                         2   \n","3                   2                           3                         3   \n","4                   4                           5                         2   \n","..                ...                         ...                       ...   \n","309                 5                           1                         2   \n","310                 1                           2                         3   \n","311                 5                           3                         5   \n","312                 4                           2                         2   \n","313                 2                           3                         2   \n","\n","     Self Confidence Level  Desire to Escape Reality  Getting Upset Easily  \\\n","0                        4                       5.0                     2   \n","1                        1                       1.0                     2   \n","2                        2                       1.0                     4   \n","3                        3                       4.0                     2   \n","4                        3                       4.0                     5   \n","..                     ...                       ...                   ...   \n","309                      2                       3.0                     5   \n","310                      2                       1.0                     4   \n","311                      3                       3.0                     3   \n","312                      2                       4.0                     5   \n","313                      2                       1.0                     1   \n","\n","     Suicidal Thoughts (Academic Stress)  Overthinking Frequency  \\\n","0                                      1                       4   \n","1                                      1                       3   \n","2                                      3                       4   \n","3                                      1                       3   \n","4                                      1                       5   \n","..                                   ...                     ...   \n","309                                    1                       4   \n","310                                    1                       5   \n","311                                    2                       3   \n","312                                    1                       4   \n","313                                    2                       2   \n","\n","     Surrounding Condition  Frequency of Crying  ...  Communication Skill  \\\n","0                        4                    3  ...                    3   \n","1                        2                    1  ...                    1   \n","2                        3                    3  ...                    2   \n","3                        1                    1  ...                    5   \n","4                        4                    4  ...                    2   \n","..                     ...                  ...  ...                  ...   \n","309                      3                    2  ...                    3   \n","310                      1                    1  ...                    3   \n","311                      3                    5  ...                    3   \n","312                      3                    4  ...                    3   \n","313                      3                    2  ...                    3   \n","\n","     Relationship with Parents  Family Pressure  Time Spent on Social Media  \\\n","0                            1                4                           2   \n","1                            1                3                           4   \n","2                            1                4                           3   \n","3                            3                1                           5   \n","4                            2                2                           4   \n","..                         ...              ...                         ...   \n","309                          3                1                           4   \n","310                          1                4                           3   \n","311                          1                3                           3   \n","312                          1                1                           4   \n","313                          2                3                           4   \n","\n","     Syllabus Size  Food Quality  Financial Support to Family  \\\n","0                4             1                            1   \n","1                4             4                            1   \n","2                5             5                            1   \n","3                5             1                            1   \n","4                3             5                            1   \n","..             ...           ...                          ...   \n","309              5             1                            3   \n","310              4             1                            5   \n","311              5             3                            3   \n","312              3             3                            1   \n","313              3             3                            2   \n","\n","     Family Expectations  Receiving Financial Support  Label  \n","0                      5                            1      2  \n","1                      5                            1      1  \n","2                      5                            3      2  \n","3                      5                            1      1  \n","4                      5                            1      3  \n","..                   ...                          ...    ...  \n","309                    1                            1      2  \n","310                    5                            2      1  \n","311                    3                            1      3  \n","312                    5                            1      2  \n","313                    3                            2      1  \n","\n","[314 rows x 28 columns]"],"text/html":["\n","  <div id=\"df-205947f2-60b3-4b6b-ba7f-d32e0da5409f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Loneliness Level</th>\n","      <th>Work-Personal Life Balance</th>\n","      <th>Hopefulness about Future</th>\n","      <th>Self Confidence Level</th>\n","      <th>Desire to Escape Reality</th>\n","      <th>Getting Upset Easily</th>\n","      <th>Suicidal Thoughts (Academic Stress)</th>\n","      <th>Overthinking Frequency</th>\n","      <th>Surrounding Condition</th>\n","      <th>Frequency of Crying</th>\n","      <th>...</th>\n","      <th>Communication Skill</th>\n","      <th>Relationship with Parents</th>\n","      <th>Family Pressure</th>\n","      <th>Time Spent on Social Media</th>\n","      <th>Syllabus Size</th>\n","      <th>Food Quality</th>\n","      <th>Financial Support to Family</th>\n","      <th>Family Expectations</th>\n","      <th>Receiving Financial Support</th>\n","      <th>Label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>5.0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>...</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1.0</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>...</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>4.0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>4.0</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>...</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>309</th>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>3.0</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>...</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>310</th>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>1.0</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>311</th>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>3.0</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>5</td>\n","      <td>...</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>312</th>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>4.0</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>...</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>313</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>...</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>314 rows × 28 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-205947f2-60b3-4b6b-ba7f-d32e0da5409f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-205947f2-60b3-4b6b-ba7f-d32e0da5409f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-205947f2-60b3-4b6b-ba7f-d32e0da5409f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-34770270-4b7e-4c5a-9d02-f4f2dee26046\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-34770270-4b7e-4c5a-9d02-f4f2dee26046')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-34770270-4b7e-4c5a-9d02-f4f2dee26046 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_bbafa001-ba65-45f0-8990-80c5fe9be5c8\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('rearranged_data')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_bbafa001-ba65-45f0-8990-80c5fe9be5c8 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('rearranged_data');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":164}]},{"cell_type":"code","source":["# Save the rearranged dataset to a CSV file\n","rearranged_data.to_csv('rearranged_data_chi_square.csv', index=False)"],"metadata":{"id":"qRALXljrCa9B"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## PCA"],"metadata":{"id":"H9PMTo7jAPxA"}},{"cell_type":"code","source":["import pandas as pd\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.decomposition import PCA"],"metadata":{"id":"_yI_M03yAPRt"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Load the dataset\n","data_PCA = pd.read_csv('rearranged_data_chi_square.csv')\n","data_PCA"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":513},"id":"6hn6PaHfC5tA","executionInfo":{"status":"ok","timestamp":1705508965305,"user_tz":-360,"elapsed":119,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"14dd9b52-9ad8-45a7-a087-52e5a10aece8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Loneliness Level  Work-Personal Life Balance  Hopefulness about Future  \\\n","0                   4                           2                         5   \n","1                   4                           2                         1   \n","2                   3                           2                         2   \n","3                   2                           3                         3   \n","4                   4                           5                         2   \n","..                ...                         ...                       ...   \n","309                 5                           1                         2   \n","310                 1                           2                         3   \n","311                 5                           3                         5   \n","312                 4                           2                         2   \n","313                 2                           3                         2   \n","\n","     Self Confidence Level  Desire to Escape Reality  Getting Upset Easily  \\\n","0                        4                       5.0                     2   \n","1                        1                       1.0                     2   \n","2                        2                       1.0                     4   \n","3                        3                       4.0                     2   \n","4                        3                       4.0                     5   \n","..                     ...                       ...                   ...   \n","309                      2                       3.0                     5   \n","310                      2                       1.0                     4   \n","311                      3                       3.0                     3   \n","312                      2                       4.0                     5   \n","313                      2                       1.0                     1   \n","\n","     Suicidal Thoughts (Academic Stress)  Overthinking Frequency  \\\n","0                                      1                       4   \n","1                                      1                       3   \n","2                                      3                       4   \n","3                                      1                       3   \n","4                                      1                       5   \n","..                                   ...                     ...   \n","309                                    1                       4   \n","310                                    1                       5   \n","311                                    2                       3   \n","312                                    1                       4   \n","313                                    2                       2   \n","\n","     Surrounding Condition  Frequency of Crying  ...  Communication Skill  \\\n","0                        4                    3  ...                    3   \n","1                        2                    1  ...                    1   \n","2                        3                    3  ...                    2   \n","3                        1                    1  ...                    5   \n","4                        4                    4  ...                    2   \n","..                     ...                  ...  ...                  ...   \n","309                      3                    2  ...                    3   \n","310                      1                    1  ...                    3   \n","311                      3                    5  ...                    3   \n","312                      3                    4  ...                    3   \n","313                      3                    2  ...                    3   \n","\n","     Relationship with Parents  Family Pressure  Time Spent on Social Media  \\\n","0                            1                4                           2   \n","1                            1                3                           4   \n","2                            1                4                           3   \n","3                            3                1                           5   \n","4                            2                2                           4   \n","..                         ...              ...                         ...   \n","309                          3                1                           4   \n","310                          1                4                           3   \n","311                          1                3                           3   \n","312                          1                1                           4   \n","313                          2                3                           4   \n","\n","     Syllabus Size  Food Quality  Financial Support to Family  \\\n","0                4             1                            1   \n","1                4             4                            1   \n","2                5             5                            1   \n","3                5             1                            1   \n","4                3             5                            1   \n","..             ...           ...                          ...   \n","309              5             1                            3   \n","310              4             1                            5   \n","311              5             3                            3   \n","312              3             3                            1   \n","313              3             3                            2   \n","\n","     Family Expectations  Receiving Financial Support  Label  \n","0                      5                            1      2  \n","1                      5                            1      1  \n","2                      5                            3      2  \n","3                      5                            1      1  \n","4                      5                            1      3  \n","..                   ...                          ...    ...  \n","309                    1                            1      2  \n","310                    5                            2      1  \n","311                    3                            1      3  \n","312                    5                            1      2  \n","313                    3                            2      1  \n","\n","[314 rows x 28 columns]"],"text/html":["\n","  <div id=\"df-1bcaed14-b045-4256-a02d-0523e5c47f53\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Loneliness Level</th>\n","      <th>Work-Personal Life Balance</th>\n","      <th>Hopefulness about Future</th>\n","      <th>Self Confidence Level</th>\n","      <th>Desire to Escape Reality</th>\n","      <th>Getting Upset Easily</th>\n","      <th>Suicidal Thoughts (Academic Stress)</th>\n","      <th>Overthinking Frequency</th>\n","      <th>Surrounding Condition</th>\n","      <th>Frequency of Crying</th>\n","      <th>...</th>\n","      <th>Communication Skill</th>\n","      <th>Relationship with Parents</th>\n","      <th>Family Pressure</th>\n","      <th>Time Spent on Social Media</th>\n","      <th>Syllabus Size</th>\n","      <th>Food Quality</th>\n","      <th>Financial Support to Family</th>\n","      <th>Family Expectations</th>\n","      <th>Receiving Financial Support</th>\n","      <th>Label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>5.0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>...</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1.0</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>...</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>4.0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>4.0</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>...</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>309</th>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>3.0</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>...</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>310</th>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>1.0</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>311</th>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>3.0</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>5</td>\n","      <td>...</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>312</th>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>4.0</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>...</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>313</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>...</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>314 rows × 28 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1bcaed14-b045-4256-a02d-0523e5c47f53')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1bcaed14-b045-4256-a02d-0523e5c47f53 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1bcaed14-b045-4256-a02d-0523e5c47f53');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f7ea26f6-83b4-4ea3-aef2-460da8b62c61\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f7ea26f6-83b4-4ea3-aef2-460da8b62c61')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f7ea26f6-83b4-4ea3-aef2-460da8b62c61 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_33c99281-c08e-41e6-a96e-779a7e130128\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('data_PCA')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_33c99281-c08e-41e6-a96e-779a7e130128 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('data_PCA');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":167}]},{"cell_type":"code","source":["# Separate the features and class label\n","X = data_PCA.iloc[:, :27]\n","y = data_PCA.iloc[:, -1]\n","\n","# Normalize the features using StandardScaler\n","scaler = StandardScaler()\n","\n","X_normalized = scaler.fit_transform(X)\n","X_normalized = X\n","X_normalized = X_normalized.fillna(0)"],"metadata":{"id":"bf4dnOSmAw9C"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Apply PCA to the normalized features\n","pca = PCA()\n","pca.fit(X_normalized)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":75},"id":"BprTH0MdD1qi","executionInfo":{"status":"ok","timestamp":1705508965310,"user_tz":-360,"elapsed":120,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"eb87e56c-6d91-444d-dc44-d00fa37f5882"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["PCA()"],"text/html":["<style>#sk-container-id-15 {color: black;background-color: white;}#sk-container-id-15 pre{padding: 0;}#sk-container-id-15 div.sk-toggleable {background-color: white;}#sk-container-id-15 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-15 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-15 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-15 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-15 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-15 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-15 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-15 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-15 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-15 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-15 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-15 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-15 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-15 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-15 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-15 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-15 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-15 div.sk-item {position: relative;z-index: 1;}#sk-container-id-15 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-15 div.sk-item::before, #sk-container-id-15 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-15 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-15 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-15 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-15 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-15 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-15 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-15 div.sk-label-container {text-align: center;}#sk-container-id-15 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-15 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-15\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>PCA()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-15\" type=\"checkbox\" checked><label for=\"sk-estimator-id-15\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">PCA</label><div class=\"sk-toggleable__content\"><pre>PCA()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":169}]},{"cell_type":"code","source":["# Calculate the variance of all principal components\n","variance = pca.explained_variance_ratio_\n","\n","# Rank the principal components based on their variance\n","sorted_indices = sorted(range(len(variance)), key=lambda i: variance[i], reverse=True)\n","\n","# Save the variance values of all principal components to a CSV file\n","variance_df = pd.DataFrame({'Principal Component': range(1, len(variance)+1), 'Variance': variance[sorted_indices]})\n","variance_df.to_csv('pca_variance.csv', index=False)\n","\n","variance_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":896},"id":"9r6f4Up9EYyn","executionInfo":{"status":"ok","timestamp":1705508965312,"user_tz":-360,"elapsed":120,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"a95f5507-2662-49b6-9c0a-4cdc1def135c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Principal Component  Variance\n","0                     1  0.271790\n","1                     2  0.070923\n","2                     3  0.059331\n","3                     4  0.048349\n","4                     5  0.046607\n","5                     6  0.044841\n","6                     7  0.041300\n","7                     8  0.038421\n","8                     9  0.035808\n","9                    10  0.032028\n","10                   11  0.030179\n","11                   12  0.028584\n","12                   13  0.027203\n","13                   14  0.022385\n","14                   15  0.021788\n","15                   16  0.020819\n","16                   17  0.020067\n","17                   18  0.018976\n","18                   19  0.017854\n","19                   20  0.016885\n","20                   21  0.016229\n","21                   22  0.014735\n","22                   23  0.013860\n","23                   24  0.012235\n","24                   25  0.011478\n","25                   26  0.009987\n","26                   27  0.007339"],"text/html":["\n","  <div id=\"df-9ddabaed-ed2f-440b-b3f7-cc57da42f37c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Principal Component</th>\n","      <th>Variance</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0.271790</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>0.070923</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>0.059331</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>0.048349</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>0.046607</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>6</td>\n","      <td>0.044841</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>7</td>\n","      <td>0.041300</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>8</td>\n","      <td>0.038421</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>9</td>\n","      <td>0.035808</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>10</td>\n","      <td>0.032028</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>11</td>\n","      <td>0.030179</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>12</td>\n","      <td>0.028584</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>13</td>\n","      <td>0.027203</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>14</td>\n","      <td>0.022385</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>15</td>\n","      <td>0.021788</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>16</td>\n","      <td>0.020819</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>17</td>\n","      <td>0.020067</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>18</td>\n","      <td>0.018976</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>19</td>\n","      <td>0.017854</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>20</td>\n","      <td>0.016885</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>21</td>\n","      <td>0.016229</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>22</td>\n","      <td>0.014735</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>23</td>\n","      <td>0.013860</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>24</td>\n","      <td>0.012235</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>25</td>\n","      <td>0.011478</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>26</td>\n","      <td>0.009987</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>27</td>\n","      <td>0.007339</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9ddabaed-ed2f-440b-b3f7-cc57da42f37c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9ddabaed-ed2f-440b-b3f7-cc57da42f37c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9ddabaed-ed2f-440b-b3f7-cc57da42f37c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ad5a4171-4306-4771-a8ed-adab2394d6cb\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ad5a4171-4306-4771-a8ed-adab2394d6cb')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ad5a4171-4306-4771-a8ed-adab2394d6cb button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_33fe13b9-648c-4ce8-830b-1b972fa27261\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('variance_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_33fe13b9-648c-4ce8-830b-1b972fa27261 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('variance_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":170}]},{"cell_type":"code","source":["# Rearrange the dataset based on the variance of the principal components\n","X_transformed = pca.transform(X_normalized)[:, sorted_indices]\n","rearranged_data = pd.DataFrame(X_transformed, columns=['PCA ' + str(i+1) for i in range(X_transformed.shape[1])])\n","rearranged_data['Class'] = y\n","\n","rearranged_data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":444},"id":"6lTKizQtFAA-","executionInfo":{"status":"ok","timestamp":1705508965315,"user_tz":-360,"elapsed":121,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"27df8355-1c3d-4000-9f81-84538c5748ee"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        PCA 1     PCA 2     PCA 3     PCA 4     PCA 5     PCA 6     PCA 7  \\\n","0   -0.858683  0.180556  0.581471  2.968810  0.711392 -2.281555  0.325962   \n","1    4.775670 -0.951902  1.238174 -0.132458 -0.821940 -0.897392 -1.622403   \n","2    0.797512 -2.506132  2.395035 -1.265972 -0.454961 -0.294006 -0.635710   \n","3    1.695993  2.355874 -1.858814  1.730071 -0.535378 -0.353564  2.689364   \n","4   -3.090131 -0.210064 -0.051429 -2.042090 -1.377784  1.102413 -1.300999   \n","..        ...       ...       ...       ...       ...       ...       ...   \n","309  0.716034 -0.156499 -2.099905 -0.389739  1.491896 -2.966669  0.936042   \n","310  2.574612 -0.681876 -0.776889  1.743165 -1.167514 -0.921519  1.992501   \n","311 -2.387283 -0.925110  0.618235 -0.568452  2.080363 -0.847816  0.931340   \n","312  0.321714 -2.630680 -2.756261 -0.910438 -0.278941 -0.159928 -1.879983   \n","313  2.834202 -0.922596  1.318175  1.285469  2.036527  1.711324 -1.144533   \n","\n","        PCA 8     PCA 9    PCA 10  ...    PCA 19    PCA 20    PCA 21  \\\n","0   -1.217227 -1.873681 -0.660209  ...  1.348916  0.009683  0.484969   \n","1   -1.784514 -0.375979 -0.967598  ... -1.207526  0.818173 -0.852012   \n","2    2.171679 -1.529983 -0.424539  ...  0.301262  0.523121 -0.091659   \n","3   -0.319821 -1.547758  0.171142  ... -1.848237 -0.154009 -1.560637   \n","4   -1.711703 -0.248604  0.883575  ... -0.091706  0.661090 -0.947121   \n","..        ...       ...       ...  ...       ...       ...       ...   \n","309 -1.292133 -0.274947  1.971603  ... -0.375575 -1.160426  1.859343   \n","310  2.283291  0.568167  0.187915  ...  1.397232 -1.222241  0.603970   \n","311 -0.342121 -1.948360 -0.908450  ... -0.302545 -2.210988  0.111399   \n","312  0.451965  0.709125  0.439537  ... -0.367760 -0.625096  0.077731   \n","313 -0.222391  0.334963  0.269285  ... -0.378837 -1.432963  0.063685   \n","\n","       PCA 22    PCA 23    PCA 24    PCA 25    PCA 26    PCA 27  Class  \n","0    0.161070  0.968913  0.405107  1.355269  0.596170 -0.814424      2  \n","1    0.588487 -0.338856  0.334611 -0.310629 -0.260074  0.611944      1  \n","2   -0.103445  0.564585 -0.590561 -0.230430 -0.140762  0.258528      2  \n","3    0.241720  0.776525  0.638540 -0.964050  1.585483 -0.247960      1  \n","4   -0.373800 -1.800076 -1.055791 -0.427987  0.188862 -0.164317      3  \n","..        ...       ...       ...       ...       ...       ...    ...  \n","309 -0.564737  1.774809 -0.797940 -0.249875  0.960234  0.088656      2  \n","310  0.485554 -0.621489  1.003151  0.148079 -0.741559 -0.127989      1  \n","311  0.038817  0.674023  0.292276  0.385969 -0.025436  0.250600      3  \n","312  0.773670 -0.309566 -0.215507 -0.468401 -0.338167 -0.001359      2  \n","313 -0.939095  0.766323  0.628523 -0.557363 -0.348655 -0.965375      1  \n","\n","[314 rows x 28 columns]"],"text/html":["\n","  <div id=\"df-d9be5326-955e-4f7b-8b9f-bfcfb897216f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PCA 1</th>\n","      <th>PCA 2</th>\n","      <th>PCA 3</th>\n","      <th>PCA 4</th>\n","      <th>PCA 5</th>\n","      <th>PCA 6</th>\n","      <th>PCA 7</th>\n","      <th>PCA 8</th>\n","      <th>PCA 9</th>\n","      <th>PCA 10</th>\n","      <th>...</th>\n","      <th>PCA 19</th>\n","      <th>PCA 20</th>\n","      <th>PCA 21</th>\n","      <th>PCA 22</th>\n","      <th>PCA 23</th>\n","      <th>PCA 24</th>\n","      <th>PCA 25</th>\n","      <th>PCA 26</th>\n","      <th>PCA 27</th>\n","      <th>Class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>-0.858683</td>\n","      <td>0.180556</td>\n","      <td>0.581471</td>\n","      <td>2.968810</td>\n","      <td>0.711392</td>\n","      <td>-2.281555</td>\n","      <td>0.325962</td>\n","      <td>-1.217227</td>\n","      <td>-1.873681</td>\n","      <td>-0.660209</td>\n","      <td>...</td>\n","      <td>1.348916</td>\n","      <td>0.009683</td>\n","      <td>0.484969</td>\n","      <td>0.161070</td>\n","      <td>0.968913</td>\n","      <td>0.405107</td>\n","      <td>1.355269</td>\n","      <td>0.596170</td>\n","      <td>-0.814424</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4.775670</td>\n","      <td>-0.951902</td>\n","      <td>1.238174</td>\n","      <td>-0.132458</td>\n","      <td>-0.821940</td>\n","      <td>-0.897392</td>\n","      <td>-1.622403</td>\n","      <td>-1.784514</td>\n","      <td>-0.375979</td>\n","      <td>-0.967598</td>\n","      <td>...</td>\n","      <td>-1.207526</td>\n","      <td>0.818173</td>\n","      <td>-0.852012</td>\n","      <td>0.588487</td>\n","      <td>-0.338856</td>\n","      <td>0.334611</td>\n","      <td>-0.310629</td>\n","      <td>-0.260074</td>\n","      <td>0.611944</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.797512</td>\n","      <td>-2.506132</td>\n","      <td>2.395035</td>\n","      <td>-1.265972</td>\n","      <td>-0.454961</td>\n","      <td>-0.294006</td>\n","      <td>-0.635710</td>\n","      <td>2.171679</td>\n","      <td>-1.529983</td>\n","      <td>-0.424539</td>\n","      <td>...</td>\n","      <td>0.301262</td>\n","      <td>0.523121</td>\n","      <td>-0.091659</td>\n","      <td>-0.103445</td>\n","      <td>0.564585</td>\n","      <td>-0.590561</td>\n","      <td>-0.230430</td>\n","      <td>-0.140762</td>\n","      <td>0.258528</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.695993</td>\n","      <td>2.355874</td>\n","      <td>-1.858814</td>\n","      <td>1.730071</td>\n","      <td>-0.535378</td>\n","      <td>-0.353564</td>\n","      <td>2.689364</td>\n","      <td>-0.319821</td>\n","      <td>-1.547758</td>\n","      <td>0.171142</td>\n","      <td>...</td>\n","      <td>-1.848237</td>\n","      <td>-0.154009</td>\n","      <td>-1.560637</td>\n","      <td>0.241720</td>\n","      <td>0.776525</td>\n","      <td>0.638540</td>\n","      <td>-0.964050</td>\n","      <td>1.585483</td>\n","      <td>-0.247960</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>-3.090131</td>\n","      <td>-0.210064</td>\n","      <td>-0.051429</td>\n","      <td>-2.042090</td>\n","      <td>-1.377784</td>\n","      <td>1.102413</td>\n","      <td>-1.300999</td>\n","      <td>-1.711703</td>\n","      <td>-0.248604</td>\n","      <td>0.883575</td>\n","      <td>...</td>\n","      <td>-0.091706</td>\n","      <td>0.661090</td>\n","      <td>-0.947121</td>\n","      <td>-0.373800</td>\n","      <td>-1.800076</td>\n","      <td>-1.055791</td>\n","      <td>-0.427987</td>\n","      <td>0.188862</td>\n","      <td>-0.164317</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>309</th>\n","      <td>0.716034</td>\n","      <td>-0.156499</td>\n","      <td>-2.099905</td>\n","      <td>-0.389739</td>\n","      <td>1.491896</td>\n","      <td>-2.966669</td>\n","      <td>0.936042</td>\n","      <td>-1.292133</td>\n","      <td>-0.274947</td>\n","      <td>1.971603</td>\n","      <td>...</td>\n","      <td>-0.375575</td>\n","      <td>-1.160426</td>\n","      <td>1.859343</td>\n","      <td>-0.564737</td>\n","      <td>1.774809</td>\n","      <td>-0.797940</td>\n","      <td>-0.249875</td>\n","      <td>0.960234</td>\n","      <td>0.088656</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>310</th>\n","      <td>2.574612</td>\n","      <td>-0.681876</td>\n","      <td>-0.776889</td>\n","      <td>1.743165</td>\n","      <td>-1.167514</td>\n","      <td>-0.921519</td>\n","      <td>1.992501</td>\n","      <td>2.283291</td>\n","      <td>0.568167</td>\n","      <td>0.187915</td>\n","      <td>...</td>\n","      <td>1.397232</td>\n","      <td>-1.222241</td>\n","      <td>0.603970</td>\n","      <td>0.485554</td>\n","      <td>-0.621489</td>\n","      <td>1.003151</td>\n","      <td>0.148079</td>\n","      <td>-0.741559</td>\n","      <td>-0.127989</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>311</th>\n","      <td>-2.387283</td>\n","      <td>-0.925110</td>\n","      <td>0.618235</td>\n","      <td>-0.568452</td>\n","      <td>2.080363</td>\n","      <td>-0.847816</td>\n","      <td>0.931340</td>\n","      <td>-0.342121</td>\n","      <td>-1.948360</td>\n","      <td>-0.908450</td>\n","      <td>...</td>\n","      <td>-0.302545</td>\n","      <td>-2.210988</td>\n","      <td>0.111399</td>\n","      <td>0.038817</td>\n","      <td>0.674023</td>\n","      <td>0.292276</td>\n","      <td>0.385969</td>\n","      <td>-0.025436</td>\n","      <td>0.250600</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>312</th>\n","      <td>0.321714</td>\n","      <td>-2.630680</td>\n","      <td>-2.756261</td>\n","      <td>-0.910438</td>\n","      <td>-0.278941</td>\n","      <td>-0.159928</td>\n","      <td>-1.879983</td>\n","      <td>0.451965</td>\n","      <td>0.709125</td>\n","      <td>0.439537</td>\n","      <td>...</td>\n","      <td>-0.367760</td>\n","      <td>-0.625096</td>\n","      <td>0.077731</td>\n","      <td>0.773670</td>\n","      <td>-0.309566</td>\n","      <td>-0.215507</td>\n","      <td>-0.468401</td>\n","      <td>-0.338167</td>\n","      <td>-0.001359</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>313</th>\n","      <td>2.834202</td>\n","      <td>-0.922596</td>\n","      <td>1.318175</td>\n","      <td>1.285469</td>\n","      <td>2.036527</td>\n","      <td>1.711324</td>\n","      <td>-1.144533</td>\n","      <td>-0.222391</td>\n","      <td>0.334963</td>\n","      <td>0.269285</td>\n","      <td>...</td>\n","      <td>-0.378837</td>\n","      <td>-1.432963</td>\n","      <td>0.063685</td>\n","      <td>-0.939095</td>\n","      <td>0.766323</td>\n","      <td>0.628523</td>\n","      <td>-0.557363</td>\n","      <td>-0.348655</td>\n","      <td>-0.965375</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>314 rows × 28 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d9be5326-955e-4f7b-8b9f-bfcfb897216f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d9be5326-955e-4f7b-8b9f-bfcfb897216f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d9be5326-955e-4f7b-8b9f-bfcfb897216f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4ebe7bee-6563-4533-a909-4771a4afbacb\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4ebe7bee-6563-4533-a909-4771a4afbacb')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4ebe7bee-6563-4533-a909-4771a4afbacb button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_0b0328f6-525a-4477-ad38-edb15c785020\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('rearranged_data')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_0b0328f6-525a-4477-ad38-edb15c785020 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('rearranged_data');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":171}]},{"cell_type":"code","source":["# Save the rearranged dataset to a CSV file\n","rearranged_data.to_csv('rearranged_data_pca.csv', index=False)"],"metadata":{"id":"dQwjMQogFH61"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## RFE"],"metadata":{"id":"BMBr2KjtFdDq"}},{"cell_type":"code","source":["import pandas as pd\n","from sklearn.preprocessing import MinMaxScaler\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.feature_selection import RFE\n"],"metadata":{"id":"zUMunrSoFa2B"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Load the dataset\n","data_RFE = pd.read_csv('rearranged_data_pca.csv')\n","data_RFE"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":444},"id":"8vK_icykFkzG","executionInfo":{"status":"ok","timestamp":1705508965319,"user_tz":-360,"elapsed":120,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"7c099c97-85b0-412a-ae54-1bd92d0d9fbe"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        PCA 1     PCA 2     PCA 3     PCA 4     PCA 5     PCA 6     PCA 7  \\\n","0   -0.858683  0.180556  0.581471  2.968810  0.711392 -2.281555  0.325962   \n","1    4.775670 -0.951902  1.238174 -0.132458 -0.821940 -0.897392 -1.622403   \n","2    0.797512 -2.506132  2.395035 -1.265972 -0.454961 -0.294006 -0.635710   \n","3    1.695993  2.355874 -1.858814  1.730071 -0.535378 -0.353564  2.689364   \n","4   -3.090131 -0.210064 -0.051429 -2.042090 -1.377784  1.102413 -1.300999   \n","..        ...       ...       ...       ...       ...       ...       ...   \n","309  0.716034 -0.156499 -2.099905 -0.389739  1.491896 -2.966669  0.936042   \n","310  2.574612 -0.681876 -0.776889  1.743165 -1.167514 -0.921519  1.992501   \n","311 -2.387283 -0.925110  0.618235 -0.568452  2.080363 -0.847816  0.931340   \n","312  0.321714 -2.630680 -2.756261 -0.910438 -0.278941 -0.159928 -1.879983   \n","313  2.834202 -0.922596  1.318175  1.285469  2.036527  1.711324 -1.144533   \n","\n","        PCA 8     PCA 9    PCA 10  ...    PCA 19    PCA 20    PCA 21  \\\n","0   -1.217227 -1.873681 -0.660209  ...  1.348916  0.009683  0.484969   \n","1   -1.784514 -0.375979 -0.967598  ... -1.207526  0.818173 -0.852012   \n","2    2.171679 -1.529983 -0.424539  ...  0.301262  0.523121 -0.091659   \n","3   -0.319821 -1.547758  0.171142  ... -1.848237 -0.154009 -1.560637   \n","4   -1.711703 -0.248604  0.883575  ... -0.091706  0.661090 -0.947121   \n","..        ...       ...       ...  ...       ...       ...       ...   \n","309 -1.292133 -0.274947  1.971603  ... -0.375575 -1.160426  1.859343   \n","310  2.283291  0.568167  0.187915  ...  1.397232 -1.222241  0.603970   \n","311 -0.342121 -1.948360 -0.908450  ... -0.302545 -2.210988  0.111399   \n","312  0.451965  0.709125  0.439537  ... -0.367760 -0.625096  0.077731   \n","313 -0.222391  0.334963  0.269285  ... -0.378837 -1.432963  0.063685   \n","\n","       PCA 22    PCA 23    PCA 24    PCA 25    PCA 26    PCA 27  Class  \n","0    0.161070  0.968913  0.405107  1.355269  0.596170 -0.814424      2  \n","1    0.588487 -0.338856  0.334611 -0.310629 -0.260074  0.611944      1  \n","2   -0.103445  0.564585 -0.590561 -0.230430 -0.140762  0.258528      2  \n","3    0.241720  0.776525  0.638540 -0.964050  1.585483 -0.247960      1  \n","4   -0.373800 -1.800076 -1.055791 -0.427987  0.188862 -0.164317      3  \n","..        ...       ...       ...       ...       ...       ...    ...  \n","309 -0.564737  1.774809 -0.797940 -0.249875  0.960234  0.088656      2  \n","310  0.485554 -0.621489  1.003151  0.148079 -0.741559 -0.127989      1  \n","311  0.038817  0.674023  0.292276  0.385969 -0.025436  0.250600      3  \n","312  0.773670 -0.309566 -0.215507 -0.468401 -0.338167 -0.001359      2  \n","313 -0.939095  0.766323  0.628523 -0.557363 -0.348655 -0.965375      1  \n","\n","[314 rows x 28 columns]"],"text/html":["\n","  <div id=\"df-a1e7c03c-271f-47ea-8e09-952c31948604\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PCA 1</th>\n","      <th>PCA 2</th>\n","      <th>PCA 3</th>\n","      <th>PCA 4</th>\n","      <th>PCA 5</th>\n","      <th>PCA 6</th>\n","      <th>PCA 7</th>\n","      <th>PCA 8</th>\n","      <th>PCA 9</th>\n","      <th>PCA 10</th>\n","      <th>...</th>\n","      <th>PCA 19</th>\n","      <th>PCA 20</th>\n","      <th>PCA 21</th>\n","      <th>PCA 22</th>\n","      <th>PCA 23</th>\n","      <th>PCA 24</th>\n","      <th>PCA 25</th>\n","      <th>PCA 26</th>\n","      <th>PCA 27</th>\n","      <th>Class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>-0.858683</td>\n","      <td>0.180556</td>\n","      <td>0.581471</td>\n","      <td>2.968810</td>\n","      <td>0.711392</td>\n","      <td>-2.281555</td>\n","      <td>0.325962</td>\n","      <td>-1.217227</td>\n","      <td>-1.873681</td>\n","      <td>-0.660209</td>\n","      <td>...</td>\n","      <td>1.348916</td>\n","      <td>0.009683</td>\n","      <td>0.484969</td>\n","      <td>0.161070</td>\n","      <td>0.968913</td>\n","      <td>0.405107</td>\n","      <td>1.355269</td>\n","      <td>0.596170</td>\n","      <td>-0.814424</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4.775670</td>\n","      <td>-0.951902</td>\n","      <td>1.238174</td>\n","      <td>-0.132458</td>\n","      <td>-0.821940</td>\n","      <td>-0.897392</td>\n","      <td>-1.622403</td>\n","      <td>-1.784514</td>\n","      <td>-0.375979</td>\n","      <td>-0.967598</td>\n","      <td>...</td>\n","      <td>-1.207526</td>\n","      <td>0.818173</td>\n","      <td>-0.852012</td>\n","      <td>0.588487</td>\n","      <td>-0.338856</td>\n","      <td>0.334611</td>\n","      <td>-0.310629</td>\n","      <td>-0.260074</td>\n","      <td>0.611944</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.797512</td>\n","      <td>-2.506132</td>\n","      <td>2.395035</td>\n","      <td>-1.265972</td>\n","      <td>-0.454961</td>\n","      <td>-0.294006</td>\n","      <td>-0.635710</td>\n","      <td>2.171679</td>\n","      <td>-1.529983</td>\n","      <td>-0.424539</td>\n","      <td>...</td>\n","      <td>0.301262</td>\n","      <td>0.523121</td>\n","      <td>-0.091659</td>\n","      <td>-0.103445</td>\n","      <td>0.564585</td>\n","      <td>-0.590561</td>\n","      <td>-0.230430</td>\n","      <td>-0.140762</td>\n","      <td>0.258528</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.695993</td>\n","      <td>2.355874</td>\n","      <td>-1.858814</td>\n","      <td>1.730071</td>\n","      <td>-0.535378</td>\n","      <td>-0.353564</td>\n","      <td>2.689364</td>\n","      <td>-0.319821</td>\n","      <td>-1.547758</td>\n","      <td>0.171142</td>\n","      <td>...</td>\n","      <td>-1.848237</td>\n","      <td>-0.154009</td>\n","      <td>-1.560637</td>\n","      <td>0.241720</td>\n","      <td>0.776525</td>\n","      <td>0.638540</td>\n","      <td>-0.964050</td>\n","      <td>1.585483</td>\n","      <td>-0.247960</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>-3.090131</td>\n","      <td>-0.210064</td>\n","      <td>-0.051429</td>\n","      <td>-2.042090</td>\n","      <td>-1.377784</td>\n","      <td>1.102413</td>\n","      <td>-1.300999</td>\n","      <td>-1.711703</td>\n","      <td>-0.248604</td>\n","      <td>0.883575</td>\n","      <td>...</td>\n","      <td>-0.091706</td>\n","      <td>0.661090</td>\n","      <td>-0.947121</td>\n","      <td>-0.373800</td>\n","      <td>-1.800076</td>\n","      <td>-1.055791</td>\n","      <td>-0.427987</td>\n","      <td>0.188862</td>\n","      <td>-0.164317</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>309</th>\n","      <td>0.716034</td>\n","      <td>-0.156499</td>\n","      <td>-2.099905</td>\n","      <td>-0.389739</td>\n","      <td>1.491896</td>\n","      <td>-2.966669</td>\n","      <td>0.936042</td>\n","      <td>-1.292133</td>\n","      <td>-0.274947</td>\n","      <td>1.971603</td>\n","      <td>...</td>\n","      <td>-0.375575</td>\n","      <td>-1.160426</td>\n","      <td>1.859343</td>\n","      <td>-0.564737</td>\n","      <td>1.774809</td>\n","      <td>-0.797940</td>\n","      <td>-0.249875</td>\n","      <td>0.960234</td>\n","      <td>0.088656</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>310</th>\n","      <td>2.574612</td>\n","      <td>-0.681876</td>\n","      <td>-0.776889</td>\n","      <td>1.743165</td>\n","      <td>-1.167514</td>\n","      <td>-0.921519</td>\n","      <td>1.992501</td>\n","      <td>2.283291</td>\n","      <td>0.568167</td>\n","      <td>0.187915</td>\n","      <td>...</td>\n","      <td>1.397232</td>\n","      <td>-1.222241</td>\n","      <td>0.603970</td>\n","      <td>0.485554</td>\n","      <td>-0.621489</td>\n","      <td>1.003151</td>\n","      <td>0.148079</td>\n","      <td>-0.741559</td>\n","      <td>-0.127989</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>311</th>\n","      <td>-2.387283</td>\n","      <td>-0.925110</td>\n","      <td>0.618235</td>\n","      <td>-0.568452</td>\n","      <td>2.080363</td>\n","      <td>-0.847816</td>\n","      <td>0.931340</td>\n","      <td>-0.342121</td>\n","      <td>-1.948360</td>\n","      <td>-0.908450</td>\n","      <td>...</td>\n","      <td>-0.302545</td>\n","      <td>-2.210988</td>\n","      <td>0.111399</td>\n","      <td>0.038817</td>\n","      <td>0.674023</td>\n","      <td>0.292276</td>\n","      <td>0.385969</td>\n","      <td>-0.025436</td>\n","      <td>0.250600</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>312</th>\n","      <td>0.321714</td>\n","      <td>-2.630680</td>\n","      <td>-2.756261</td>\n","      <td>-0.910438</td>\n","      <td>-0.278941</td>\n","      <td>-0.159928</td>\n","      <td>-1.879983</td>\n","      <td>0.451965</td>\n","      <td>0.709125</td>\n","      <td>0.439537</td>\n","      <td>...</td>\n","      <td>-0.367760</td>\n","      <td>-0.625096</td>\n","      <td>0.077731</td>\n","      <td>0.773670</td>\n","      <td>-0.309566</td>\n","      <td>-0.215507</td>\n","      <td>-0.468401</td>\n","      <td>-0.338167</td>\n","      <td>-0.001359</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>313</th>\n","      <td>2.834202</td>\n","      <td>-0.922596</td>\n","      <td>1.318175</td>\n","      <td>1.285469</td>\n","      <td>2.036527</td>\n","      <td>1.711324</td>\n","      <td>-1.144533</td>\n","      <td>-0.222391</td>\n","      <td>0.334963</td>\n","      <td>0.269285</td>\n","      <td>...</td>\n","      <td>-0.378837</td>\n","      <td>-1.432963</td>\n","      <td>0.063685</td>\n","      <td>-0.939095</td>\n","      <td>0.766323</td>\n","      <td>0.628523</td>\n","      <td>-0.557363</td>\n","      <td>-0.348655</td>\n","      <td>-0.965375</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>314 rows × 28 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a1e7c03c-271f-47ea-8e09-952c31948604')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a1e7c03c-271f-47ea-8e09-952c31948604 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a1e7c03c-271f-47ea-8e09-952c31948604');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d35e3ed2-19ac-4f8a-aaa4-9adec8cdba6c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d35e3ed2-19ac-4f8a-aaa4-9adec8cdba6c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d35e3ed2-19ac-4f8a-aaa4-9adec8cdba6c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_4ce47230-09dd-45df-a98f-71b6a9569ded\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('data_RFE')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_4ce47230-09dd-45df-a98f-71b6a9569ded button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('data_RFE');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":174}]},{"cell_type":"code","source":["# Separate the features and class label\n","X = data_RFE.iloc[:, :-1]\n","y = data_RFE.iloc[:, -1]\n","\n","# Normalize the features using MinMaxScaler\n","scaler = MinMaxScaler()\n","X_normalized = scaler.fit_transform(X)\n","\n","# Define the random forest classifier\n","rf = RandomForestClassifier(n_estimators=100)\n","\n","# Apply RFE with cross-validation to rank the features\n","rfe = RFE(estimator=rf, n_features_to_select=1, step=1)\n","rfe.fit(X_normalized, y)\n","\n","# Rank the features based on their importance scores\n","feature_ranks = X.columns[rfe.ranking_ - 1]\n","\n","# Save the feature ranks to a CSV file\n","ranked_features_df = pd.DataFrame({'Feature': feature_ranks})\n","ranked_features_df.to_csv('feature_ranks_rfe_rf.csv', index=False)\n","\n","ranked_features_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":896},"id":"PCxsQQSAFuNj","executionInfo":{"status":"ok","timestamp":1705508972055,"user_tz":-360,"elapsed":6853,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"aebb3c71-4350-4e21-ec0a-339cf1d0f2cf"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Feature\n","0    PCA 1\n","1   PCA 17\n","2    PCA 3\n","3    PCA 4\n","4    PCA 9\n","5    PCA 7\n","6   PCA 23\n","7   PCA 25\n","8   PCA 19\n","9   PCA 15\n","10   PCA 2\n","11  PCA 18\n","12  PCA 16\n","13  PCA 11\n","14  PCA 27\n","15  PCA 14\n","16  PCA 10\n","17  PCA 20\n","18  PCA 24\n","19  PCA 22\n","20   PCA 5\n","21   PCA 6\n","22  PCA 13\n","23  PCA 21\n","24  PCA 12\n","25   PCA 8\n","26  PCA 26"],"text/html":["\n","  <div id=\"df-773de332-2b40-423e-8880-1d2bca1c70c9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Feature</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>PCA 1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>PCA 17</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>PCA 3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>PCA 4</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>PCA 9</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>PCA 7</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>PCA 23</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>PCA 25</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>PCA 19</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>PCA 15</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>PCA 2</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>PCA 18</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>PCA 16</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>PCA 11</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>PCA 27</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>PCA 14</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>PCA 10</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>PCA 20</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>PCA 24</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>PCA 22</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>PCA 5</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>PCA 6</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>PCA 13</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>PCA 21</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>PCA 12</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>PCA 8</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>PCA 26</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-773de332-2b40-423e-8880-1d2bca1c70c9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-773de332-2b40-423e-8880-1d2bca1c70c9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-773de332-2b40-423e-8880-1d2bca1c70c9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7936bab7-38c1-4564-a5ba-c5ee4fc64b46\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7936bab7-38c1-4564-a5ba-c5ee4fc64b46')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7936bab7-38c1-4564-a5ba-c5ee4fc64b46 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_cc784967-764c-49b6-b13a-32b2cbee7695\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('ranked_features_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_cc784967-764c-49b6-b13a-32b2cbee7695 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('ranked_features_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":175}]},{"cell_type":"code","source":["# Rearrange the dataset based on the feature ranks\n","rearranged_data = data_RFE[feature_ranks.tolist() + ['Class']]\n","\n","# Save the rearranged dataset to a CSV file\n","rearranged_data.to_csv('rearranged_data_rfe_rf.csv', index=False)"],"metadata":{"id":"T7AaFRKIGdg2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["rearranged_data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":444},"id":"8P12gelFHIGH","executionInfo":{"status":"ok","timestamp":1705508972058,"user_tz":-360,"elapsed":75,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"25641e27-e622-4056-91b5-e7bcdcc46f0c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        PCA 1    PCA 17     PCA 3     PCA 4     PCA 9     PCA 7    PCA 23  \\\n","0   -0.858683 -0.442399  0.581471  2.968810 -1.873681  0.325962  0.968913   \n","1    4.775670  2.206854  1.238174 -0.132458 -0.375979 -1.622403 -0.338856   \n","2    0.797512 -0.137304  2.395035 -1.265972 -1.529983 -0.635710  0.564585   \n","3    1.695993 -0.042734 -1.858814  1.730071 -1.547758  2.689364  0.776525   \n","4   -3.090131 -1.561728 -0.051429 -2.042090 -0.248604 -1.300999 -1.800076   \n","..        ...       ...       ...       ...       ...       ...       ...   \n","309  0.716034  1.525652 -2.099905 -0.389739 -0.274947  0.936042  1.774809   \n","310  2.574612  0.987574 -0.776889  1.743165  0.568167  1.992501 -0.621489   \n","311 -2.387283 -0.692704  0.618235 -0.568452 -1.948360  0.931340  0.674023   \n","312  0.321714 -2.122394 -2.756261 -0.910438  0.709125 -1.879983 -0.309566   \n","313  2.834202  0.577738  1.318175  1.285469  0.334963 -1.144533  0.766323   \n","\n","       PCA 25    PCA 19    PCA 15  ...    PCA 24    PCA 22     PCA 5  \\\n","0    1.355269  1.348916 -0.831008  ...  0.405107  0.161070  0.711392   \n","1   -0.310629 -1.207526 -0.202571  ...  0.334611  0.588487 -0.821940   \n","2   -0.230430  0.301262  0.266889  ... -0.590561 -0.103445 -0.454961   \n","3   -0.964050 -1.848237  0.147673  ...  0.638540  0.241720 -0.535378   \n","4   -0.427987 -0.091706  0.867347  ... -1.055791 -0.373800 -1.377784   \n","..        ...       ...       ...  ...       ...       ...       ...   \n","309 -0.249875 -0.375575 -0.711056  ... -0.797940 -0.564737  1.491896   \n","310  0.148079  1.397232  2.092557  ...  1.003151  0.485554 -1.167514   \n","311  0.385969 -0.302545  0.994154  ...  0.292276  0.038817  2.080363   \n","312 -0.468401 -0.367760 -1.722291  ... -0.215507  0.773670 -0.278941   \n","313 -0.557363 -0.378837  0.603975  ...  0.628523 -0.939095  2.036527   \n","\n","        PCA 6    PCA 13    PCA 21    PCA 12     PCA 8    PCA 26  Class  \n","0   -2.281555  1.696234  0.484969 -0.540591 -1.217227  0.596170      2  \n","1   -0.897392  0.249147 -0.852012 -0.577889 -1.784514 -0.260074      1  \n","2   -0.294006 -0.784931 -0.091659 -0.276855  2.171679 -0.140762      2  \n","3   -0.353564 -0.549059 -1.560637  0.538111 -0.319821  1.585483      1  \n","4    1.102413 -0.295621 -0.947121 -1.732576 -1.711703  0.188862      3  \n","..        ...       ...       ...       ...       ...       ...    ...  \n","309 -2.966669  2.503661  1.859343 -1.107172 -1.292133  0.960234      2  \n","310 -0.921519 -0.606389  0.603970 -0.617771  2.283291 -0.741559      1  \n","311 -0.847816  1.732353  0.111399 -1.719347 -0.342121 -0.025436      3  \n","312 -0.159928 -0.607802  0.077731 -0.233579  0.451965 -0.338167      2  \n","313  1.711324  0.110813  0.063685 -0.453820 -0.222391 -0.348655      1  \n","\n","[314 rows x 28 columns]"],"text/html":["\n","  <div id=\"df-2296ece7-e0aa-4c4f-8c53-3afb87195152\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PCA 1</th>\n","      <th>PCA 17</th>\n","      <th>PCA 3</th>\n","      <th>PCA 4</th>\n","      <th>PCA 9</th>\n","      <th>PCA 7</th>\n","      <th>PCA 23</th>\n","      <th>PCA 25</th>\n","      <th>PCA 19</th>\n","      <th>PCA 15</th>\n","      <th>...</th>\n","      <th>PCA 24</th>\n","      <th>PCA 22</th>\n","      <th>PCA 5</th>\n","      <th>PCA 6</th>\n","      <th>PCA 13</th>\n","      <th>PCA 21</th>\n","      <th>PCA 12</th>\n","      <th>PCA 8</th>\n","      <th>PCA 26</th>\n","      <th>Class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>-0.858683</td>\n","      <td>-0.442399</td>\n","      <td>0.581471</td>\n","      <td>2.968810</td>\n","      <td>-1.873681</td>\n","      <td>0.325962</td>\n","      <td>0.968913</td>\n","      <td>1.355269</td>\n","      <td>1.348916</td>\n","      <td>-0.831008</td>\n","      <td>...</td>\n","      <td>0.405107</td>\n","      <td>0.161070</td>\n","      <td>0.711392</td>\n","      <td>-2.281555</td>\n","      <td>1.696234</td>\n","      <td>0.484969</td>\n","      <td>-0.540591</td>\n","      <td>-1.217227</td>\n","      <td>0.596170</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4.775670</td>\n","      <td>2.206854</td>\n","      <td>1.238174</td>\n","      <td>-0.132458</td>\n","      <td>-0.375979</td>\n","      <td>-1.622403</td>\n","      <td>-0.338856</td>\n","      <td>-0.310629</td>\n","      <td>-1.207526</td>\n","      <td>-0.202571</td>\n","      <td>...</td>\n","      <td>0.334611</td>\n","      <td>0.588487</td>\n","      <td>-0.821940</td>\n","      <td>-0.897392</td>\n","      <td>0.249147</td>\n","      <td>-0.852012</td>\n","      <td>-0.577889</td>\n","      <td>-1.784514</td>\n","      <td>-0.260074</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.797512</td>\n","      <td>-0.137304</td>\n","      <td>2.395035</td>\n","      <td>-1.265972</td>\n","      <td>-1.529983</td>\n","      <td>-0.635710</td>\n","      <td>0.564585</td>\n","      <td>-0.230430</td>\n","      <td>0.301262</td>\n","      <td>0.266889</td>\n","      <td>...</td>\n","      <td>-0.590561</td>\n","      <td>-0.103445</td>\n","      <td>-0.454961</td>\n","      <td>-0.294006</td>\n","      <td>-0.784931</td>\n","      <td>-0.091659</td>\n","      <td>-0.276855</td>\n","      <td>2.171679</td>\n","      <td>-0.140762</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.695993</td>\n","      <td>-0.042734</td>\n","      <td>-1.858814</td>\n","      <td>1.730071</td>\n","      <td>-1.547758</td>\n","      <td>2.689364</td>\n","      <td>0.776525</td>\n","      <td>-0.964050</td>\n","      <td>-1.848237</td>\n","      <td>0.147673</td>\n","      <td>...</td>\n","      <td>0.638540</td>\n","      <td>0.241720</td>\n","      <td>-0.535378</td>\n","      <td>-0.353564</td>\n","      <td>-0.549059</td>\n","      <td>-1.560637</td>\n","      <td>0.538111</td>\n","      <td>-0.319821</td>\n","      <td>1.585483</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>-3.090131</td>\n","      <td>-1.561728</td>\n","      <td>-0.051429</td>\n","      <td>-2.042090</td>\n","      <td>-0.248604</td>\n","      <td>-1.300999</td>\n","      <td>-1.800076</td>\n","      <td>-0.427987</td>\n","      <td>-0.091706</td>\n","      <td>0.867347</td>\n","      <td>...</td>\n","      <td>-1.055791</td>\n","      <td>-0.373800</td>\n","      <td>-1.377784</td>\n","      <td>1.102413</td>\n","      <td>-0.295621</td>\n","      <td>-0.947121</td>\n","      <td>-1.732576</td>\n","      <td>-1.711703</td>\n","      <td>0.188862</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>309</th>\n","      <td>0.716034</td>\n","      <td>1.525652</td>\n","      <td>-2.099905</td>\n","      <td>-0.389739</td>\n","      <td>-0.274947</td>\n","      <td>0.936042</td>\n","      <td>1.774809</td>\n","      <td>-0.249875</td>\n","      <td>-0.375575</td>\n","      <td>-0.711056</td>\n","      <td>...</td>\n","      <td>-0.797940</td>\n","      <td>-0.564737</td>\n","      <td>1.491896</td>\n","      <td>-2.966669</td>\n","      <td>2.503661</td>\n","      <td>1.859343</td>\n","      <td>-1.107172</td>\n","      <td>-1.292133</td>\n","      <td>0.960234</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>310</th>\n","      <td>2.574612</td>\n","      <td>0.987574</td>\n","      <td>-0.776889</td>\n","      <td>1.743165</td>\n","      <td>0.568167</td>\n","      <td>1.992501</td>\n","      <td>-0.621489</td>\n","      <td>0.148079</td>\n","      <td>1.397232</td>\n","      <td>2.092557</td>\n","      <td>...</td>\n","      <td>1.003151</td>\n","      <td>0.485554</td>\n","      <td>-1.167514</td>\n","      <td>-0.921519</td>\n","      <td>-0.606389</td>\n","      <td>0.603970</td>\n","      <td>-0.617771</td>\n","      <td>2.283291</td>\n","      <td>-0.741559</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>311</th>\n","      <td>-2.387283</td>\n","      <td>-0.692704</td>\n","      <td>0.618235</td>\n","      <td>-0.568452</td>\n","      <td>-1.948360</td>\n","      <td>0.931340</td>\n","      <td>0.674023</td>\n","      <td>0.385969</td>\n","      <td>-0.302545</td>\n","      <td>0.994154</td>\n","      <td>...</td>\n","      <td>0.292276</td>\n","      <td>0.038817</td>\n","      <td>2.080363</td>\n","      <td>-0.847816</td>\n","      <td>1.732353</td>\n","      <td>0.111399</td>\n","      <td>-1.719347</td>\n","      <td>-0.342121</td>\n","      <td>-0.025436</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>312</th>\n","      <td>0.321714</td>\n","      <td>-2.122394</td>\n","      <td>-2.756261</td>\n","      <td>-0.910438</td>\n","      <td>0.709125</td>\n","      <td>-1.879983</td>\n","      <td>-0.309566</td>\n","      <td>-0.468401</td>\n","      <td>-0.367760</td>\n","      <td>-1.722291</td>\n","      <td>...</td>\n","      <td>-0.215507</td>\n","      <td>0.773670</td>\n","      <td>-0.278941</td>\n","      <td>-0.159928</td>\n","      <td>-0.607802</td>\n","      <td>0.077731</td>\n","      <td>-0.233579</td>\n","      <td>0.451965</td>\n","      <td>-0.338167</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>313</th>\n","      <td>2.834202</td>\n","      <td>0.577738</td>\n","      <td>1.318175</td>\n","      <td>1.285469</td>\n","      <td>0.334963</td>\n","      <td>-1.144533</td>\n","      <td>0.766323</td>\n","      <td>-0.557363</td>\n","      <td>-0.378837</td>\n","      <td>0.603975</td>\n","      <td>...</td>\n","      <td>0.628523</td>\n","      <td>-0.939095</td>\n","      <td>2.036527</td>\n","      <td>1.711324</td>\n","      <td>0.110813</td>\n","      <td>0.063685</td>\n","      <td>-0.453820</td>\n","      <td>-0.222391</td>\n","      <td>-0.348655</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>314 rows × 28 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2296ece7-e0aa-4c4f-8c53-3afb87195152')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2296ece7-e0aa-4c4f-8c53-3afb87195152 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2296ece7-e0aa-4c4f-8c53-3afb87195152');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e246bc36-5e84-4677-b2b5-2478c4dd4659\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e246bc36-5e84-4677-b2b5-2478c4dd4659')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e246bc36-5e84-4677-b2b5-2478c4dd4659 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_ff723282-c671-4613-9267-52d625d2cad7\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('rearranged_data')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_ff723282-c671-4613-9267-52d625d2cad7 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('rearranged_data');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":177}]},{"cell_type":"markdown","source":["# Select No. of Features"],"metadata":{"id":"Fmj1nuU1HsA5"}},{"cell_type":"code","source":["feat_dt = 3\n","feat_knn = 3\n","feat_lr = 3\n","feat_nb = 3\n","feat_rf = 3\n","feat_svm = 3"],"metadata":{"id":"owH6fXUFHvWh"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# ML Models"],"metadata":{"id":"pazm3h4bIdTK"}},{"cell_type":"markdown","source":["## Decision Tree"],"metadata":{"id":"kFCw7txx6XzU"}},{"cell_type":"code","source":["# Importing libraries\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","from sklearn import svm, metrics\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import classification_report, confusion_matrix, roc_curve, auc\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.svm import SVC\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.naive_bayes import GaussianNB"],"metadata":{"id":"2uHKNu_4L3Tt"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Load the dataset\n","data = pd.read_csv('rearranged_data_rfe_rf.csv')\n","\n","X = data.iloc[:, :feat_dt].values # Features\n","y = data.iloc[:, -1].values # Labels\n","\n","# Splitting the dataset into train and test sets\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state=143017)"],"metadata":{"id":"dmy1WrY06g49"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Scaling the dataset\n","from sklearn.preprocessing import MinMaxScaler\n","scaling = MinMaxScaler(feature_range=(-1,1)).fit(X_train)\n","X_train = scaling.transform(X_train)\n","X_test = scaling.transform(X_test)"],"metadata":{"id":"eXwE5Btw7sEx"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Create a Random Forest classifier and fit it to the training set\n","classifier = DecisionTreeClassifier(random_state=143017)\n","classifier.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":75},"id":"Dm0aNA3G7uLI","executionInfo":{"status":"ok","timestamp":1705508972065,"user_tz":-360,"elapsed":70,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"0f5b3d50-d2f6-4834-dfce-bcf8069de797"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["DecisionTreeClassifier(random_state=143017)"],"text/html":["<style>#sk-container-id-16 {color: black;background-color: white;}#sk-container-id-16 pre{padding: 0;}#sk-container-id-16 div.sk-toggleable {background-color: white;}#sk-container-id-16 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-16 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-16 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-16 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-16 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-16 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-16 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-16 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-16 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-16 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-16 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-16 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-16 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-16 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-16 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-16 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-16 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-16 div.sk-item {position: relative;z-index: 1;}#sk-container-id-16 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-16 div.sk-item::before, #sk-container-id-16 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-16 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-16 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-16 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-16 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-16 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-16 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-16 div.sk-label-container {text-align: center;}#sk-container-id-16 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-16 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-16\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DecisionTreeClassifier(random_state=143017)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-16\" type=\"checkbox\" checked><label for=\"sk-estimator-id-16\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">DecisionTreeClassifier</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeClassifier(random_state=143017)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":182}]},{"cell_type":"code","source":["# Making predictions\n","y_pred = classifier.predict(X_test)"],"metadata":{"id":"cPGahYji7vy4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Printing confusion matrix\n","cm = confusion_matrix(y_test, y_pred)\n","print(\"Confusion matrix:\\n\", cm)\n","\n","n_classes = cm.shape[0]\n","class_accuracy = []\n","for i in range(n_classes):\n","    class_accuracy.append(round(cm[i,i]/np.sum(cm[i,:]), 2))\n","print(\"Accuracy of each class: \", class_accuracy)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"E0myQCog7xU4","executionInfo":{"status":"ok","timestamp":1705508972067,"user_tz":-360,"elapsed":62,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"8b0326bd-cffe-483a-9d10-cdd30e45df0b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Confusion matrix:\n"," [[ 2  1  0  0  0]\n"," [ 1 14  0  0  0]\n"," [ 0  1 23  0  0]\n"," [ 0  0  0 14  2]\n"," [ 0  0  0  0  5]]\n","Accuracy of each class:  [0.67, 0.93, 0.96, 0.88, 1.0]\n"]}]},{"cell_type":"code","source":["# Plotting confusion matrix\n","plt.figure(figsize=(16, 12))\n","plt.imshow(cm, interpolation='nearest', cmap='Oranges')\n","plt.title('Confusion matrix')\n","plt.colorbar()\n","plt.xlabel('Predicted Class')\n","plt.ylabel('Actual Class')\n","tick_marks = np.arange(len(set(y)))\n","plt.xticks(tick_marks, sorted(set(y)))\n","plt.yticks(tick_marks, sorted(set(y)))\n","for i in range(len(cm)):\n","    for j in range(len(cm[0])):\n","        plt.annotate(str(cm[i][j]), xy=(j, i),\n","                     horizontalalignment='center',\n","                     verticalalignment='center',\n","                     color='white' if cm[i][j] > (0.5*cm.max()) else 'black',\n","                     fontsize=32)\n","plt.rcParams.update({'font.size': 24})\n","plt.savefig('cm-dt.png')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":821},"id":"zEBemIVc75XY","executionInfo":{"status":"ok","timestamp":1705508974114,"user_tz":-360,"elapsed":2095,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"7a2f74f2-85a4-40fb-c2f7-de8b0510d85b"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1600x1200 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Printing classification report\n","print(\"Classification report:\\n\", classification_report(y_test, y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ERmxVwQQ78tB","executionInfo":{"status":"ok","timestamp":1705508974115,"user_tz":-360,"elapsed":29,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"8ea71ed5-6d75-4a21-f354-2d5dd0ad9793"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Classification report:\n","               precision    recall  f1-score   support\n","\n","           0       0.67      0.67      0.67         3\n","           1       0.88      0.93      0.90        15\n","           2       1.00      0.96      0.98        24\n","           3       1.00      0.88      0.93        16\n","           4       0.71      1.00      0.83         5\n","\n","    accuracy                           0.92        63\n","   macro avg       0.85      0.89      0.86        63\n","weighted avg       0.93      0.92      0.92        63\n","\n"]}]},{"cell_type":"code","source":["# Calculating metrics\n","accuracy_dt = metrics.accuracy_score(y_test, y_pred)\n","precision_dt = metrics.precision_score(y_test, y_pred, average=None)\n","recall_dt = metrics.recall_score(y_test, y_pred, average=None)\n","f1_score_dt = metrics.f1_score(y_test, y_pred, average=None)"],"metadata":{"id":"NkXYVJy_8QrD"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Printing metrics rounded to two decimal points\n","print(\"Accuracy:\", round(accuracy_dt, 2))\n","print(\"Precision:\", [round(p, 2) for p in precision_dt], round(sum(precision_dt) / len(precision_dt), 2))\n","print(\"Recall:\", [round(r, 2) for r in recall_dt], round(sum(recall_dt) / len(recall_dt), 2))\n","print(\"F1-Score:\", [round(f, 2) for f in f1_score_dt], round(sum(f1_score_dt) / len(f1_score_dt), 2))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"31HfZc0J8Sww","executionInfo":{"status":"ok","timestamp":1705508974118,"user_tz":-360,"elapsed":24,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"0118ea07-c990-4586-b76c-ca7001cf7a57"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.92\n","Precision: [0.67, 0.88, 1.0, 1.0, 0.71] 0.85\n","Recall: [0.67, 0.93, 0.96, 0.88, 1.0] 0.89\n","F1-Score: [0.67, 0.9, 0.98, 0.93, 0.83] 0.86\n"]}]},{"cell_type":"markdown","source":["## KNN"],"metadata":{"id":"iUlm9BCJ_oNb"}},{"cell_type":"code","source":["# Load the dataset\n","data = pd.read_csv('rearranged_data_rfe_rf.csv')\n","\n","X = data.iloc[:, :feat_knn].values # Features\n","y = data.iloc[:, -1].values # Labels\n","\n","# Splitting the dataset into train and test sets\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state=143017)"],"metadata":{"id":"-LHr4o8u_Ml9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Scaling the dataset\n","from sklearn.preprocessing import MinMaxScaler\n","scaling = MinMaxScaler(feature_range=(-1,1)).fit(X_train)\n","X_train = scaling.transform(X_train)\n","X_test = scaling.transform(X_test)"],"metadata":{"id":"XDK4TEG5_5sQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Create a Random Forest classifier and fit it to the training set\n","classifier = KNeighborsClassifier()\n","classifier.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":75},"id":"8855TUwq_8Db","executionInfo":{"status":"ok","timestamp":1705508974119,"user_tz":-360,"elapsed":21,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"66f2031c-c8f1-4531-8cc1-734d6803ace4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["KNeighborsClassifier()"],"text/html":["<style>#sk-container-id-17 {color: black;background-color: white;}#sk-container-id-17 pre{padding: 0;}#sk-container-id-17 div.sk-toggleable {background-color: white;}#sk-container-id-17 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-17 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-17 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-17 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-17 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-17 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-17 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-17 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-17 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-17 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-17 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-17 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-17 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-17 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-17 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-17 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-17 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-17 div.sk-item {position: relative;z-index: 1;}#sk-container-id-17 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-17 div.sk-item::before, #sk-container-id-17 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-17 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-17 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-17 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-17 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-17 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-17 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-17 div.sk-label-container {text-align: center;}#sk-container-id-17 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-17 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-17\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KNeighborsClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-17\" type=\"checkbox\" checked><label for=\"sk-estimator-id-17\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KNeighborsClassifier</label><div class=\"sk-toggleable__content\"><pre>KNeighborsClassifier()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":191}]},{"cell_type":"code","source":["# Making predictions\n","y_pred = classifier.predict(X_test)"],"metadata":{"id":"jlotVgtZ_9li"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Printing confusion matrix\n","cm = confusion_matrix(y_test, y_pred)\n","print(\"Confusion matrix:\\n\", cm)\n","n_classes = cm.shape[0]\n","class_accuracy = []\n","for i in range(n_classes):\n","    class_accuracy.append(cm[i,i]/np.sum(cm[i,:]))\n","print(\"Accuracy of each class: \", class_accuracy)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"klFUAwGx__sA","executionInfo":{"status":"ok","timestamp":1705508974120,"user_tz":-360,"elapsed":20,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"d08bbcfe-21a2-4ed6-c8d3-4fd50350d901"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Confusion matrix:\n"," [[ 2  1  0  0  0]\n"," [ 0 14  1  0  0]\n"," [ 0  1 22  1  0]\n"," [ 0  0  1 15  0]\n"," [ 0  0  0  3  2]]\n","Accuracy of each class:  [0.6666666666666666, 0.9333333333333333, 0.9166666666666666, 0.9375, 0.4]\n"]}]},{"cell_type":"code","source":["# Plotting confusion matrix\n","plt.figure(figsize=(16, 12))\n","plt.imshow(cm, interpolation='nearest', cmap='Oranges')\n","plt.title('Confusion matrix')\n","plt.colorbar()\n","plt.xlabel('Predicted Class')\n","plt.ylabel('Actual Class')\n","tick_marks = np.arange(len(set(y)))\n","plt.xticks(tick_marks, sorted(set(y)))\n","plt.yticks(tick_marks, sorted(set(y)))\n","for i in range(len(cm)):\n","    for j in range(len(cm[0])):\n","        plt.annotate(str(cm[i][j]), xy=(j, i),\n","                     horizontalalignment='center',\n","                     verticalalignment='center',\n","                     color='white' if cm[i][j] > (0.5*cm.max()) else 'black',\n","                     fontsize=32)\n","plt.rcParams.update({'font.size': 24})\n","plt.savefig('cm-knn.png')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":799},"id":"i24fmevQABwg","executionInfo":{"status":"ok","timestamp":1705508975398,"user_tz":-360,"elapsed":1294,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"2101e2b9-ba46-41ea-bef1-a32034df4aa3"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1600x1200 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Printing classification report\n","print(\"Classification report:\\n\", classification_report(y_test, y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"d89W52yNAEwg","executionInfo":{"status":"ok","timestamp":1705508975398,"user_tz":-360,"elapsed":45,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"bbbb646a-39f1-41e7-b46a-2c5afd409b41"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Classification report:\n","               precision    recall  f1-score   support\n","\n","           0       1.00      0.67      0.80         3\n","           1       0.88      0.93      0.90        15\n","           2       0.92      0.92      0.92        24\n","           3       0.79      0.94      0.86        16\n","           4       1.00      0.40      0.57         5\n","\n","    accuracy                           0.87        63\n","   macro avg       0.92      0.77      0.81        63\n","weighted avg       0.89      0.87      0.87        63\n","\n"]}]},{"cell_type":"code","source":["# Calculating metrics\n","accuracy_knn = metrics.accuracy_score(y_test, y_pred)\n","precision_knn = metrics.precision_score(y_test, y_pred, average=None)\n","recall_knn = metrics.recall_score(y_test, y_pred, average=None)\n","f1_score_knn = metrics.f1_score(y_test, y_pred, average=None)"],"metadata":{"id":"0TPSuyIuAGbr"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Printing metrics rounded to two decimal points\n","print(\"Accuracy:\", round(accuracy_knn, 2))\n","print(\"Precision:\", [round(p, 2) for p in precision_knn], round(sum(precision_knn) / len(precision_knn), 2))\n","print(\"Recall:\", [round(r, 2) for r in recall_knn], round(sum(recall_knn) / len(recall_knn), 2))\n","print(\"F1-Score:\", [round(f, 2) for f in f1_score_knn], round(sum(f1_score_knn) / len(f1_score_knn), 2))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6hagDPAGAISX","executionInfo":{"status":"ok","timestamp":1705508976457,"user_tz":-360,"elapsed":1076,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"a733fef2-f5ae-43a6-8510-9abbb8139536"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.87\n","Precision: [1.0, 0.88, 0.92, 0.79, 1.0] 0.92\n","Recall: [0.67, 0.93, 0.92, 0.94, 0.4] 0.77\n","F1-Score: [0.8, 0.9, 0.92, 0.86, 0.57] 0.81\n"]}]},{"cell_type":"markdown","source":["## Logistic Regression"],"metadata":{"id":"GRUhzu3WAtoG"}},{"cell_type":"code","source":["# Load the dataset\n","data = pd.read_csv('rearranged_data_rfe_rf.csv')\n","\n","X = data.iloc[:, :feat_lr].values # Features\n","y = data.iloc[:, -1].values # Labels\n","\n","# Splitting the dataset into train and test sets\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state=143017)"],"metadata":{"id":"tpw5ZysNAKuR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Scaling the dataset\n","from sklearn.preprocessing import MinMaxScaler\n","scaling = MinMaxScaler(feature_range=(-1,1)).fit(X_train)\n","X_train = scaling.transform(X_train)\n","X_test = scaling.transform(X_test)"],"metadata":{"id":"y9zxKkIpA3JP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Create a Random Forest classifier and fit it to the training set\n","classifier = LogisticRegression(random_state=143017)\n","classifier.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":75},"id":"-ngkyJIJA6BI","executionInfo":{"status":"ok","timestamp":1705508976481,"user_tz":-360,"elapsed":56,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"b50d0e6d-e0ee-4d56-9dfd-4ed941bbf692"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LogisticRegression(random_state=143017)"],"text/html":["<style>#sk-container-id-18 {color: black;background-color: white;}#sk-container-id-18 pre{padding: 0;}#sk-container-id-18 div.sk-toggleable {background-color: white;}#sk-container-id-18 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-18 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-18 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-18 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-18 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-18 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-18 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-18 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-18 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-18 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-18 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-18 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-18 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-18 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-18 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-18 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-18 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-18 div.sk-item {position: relative;z-index: 1;}#sk-container-id-18 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-18 div.sk-item::before, #sk-container-id-18 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-18 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-18 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-18 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-18 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-18 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-18 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-18 div.sk-label-container {text-align: center;}#sk-container-id-18 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-18 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-18\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression(random_state=143017)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-18\" type=\"checkbox\" checked><label for=\"sk-estimator-id-18\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression(random_state=143017)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":200}]},{"cell_type":"code","source":["# Making predictions\n","y_pred = classifier.predict(X_test)"],"metadata":{"id":"HN63KsyVA8t0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Printing confusion matrix\n","cm = confusion_matrix(y_test, y_pred)\n","print(\"Confusion matrix:\\n\", cm)\n","n_classes = cm.shape[0]\n","class_accuracy = []\n","for i in range(n_classes):\n","    class_accuracy.append(cm[i,i]/np.sum(cm[i,:]))\n","print(\"Accuracy of each class: \", class_accuracy)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"84Ns3I2rA-EG","executionInfo":{"status":"ok","timestamp":1705508976482,"user_tz":-360,"elapsed":53,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"f6706d24-818f-4574-9b97-ca8ce496e6c4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Confusion matrix:\n"," [[ 0  3  0  0  0]\n"," [ 0 14  1  0  0]\n"," [ 0  2 22  0  0]\n"," [ 0  0  3 13  0]\n"," [ 0  0  0  5  0]]\n","Accuracy of each class:  [0.0, 0.9333333333333333, 0.9166666666666666, 0.8125, 0.0]\n"]}]},{"cell_type":"code","source":["# Plotting confusion matrix\n","plt.figure(figsize=(16, 12))\n","plt.imshow(cm, interpolation='nearest', cmap='Oranges')\n","plt.title('Confusion matrix')\n","plt.colorbar()\n","plt.xlabel('Predicted Class')\n","plt.ylabel('Actual Class')\n","tick_marks = np.arange(len(set(y)))\n","plt.xticks(tick_marks, sorted(set(y)))\n","plt.yticks(tick_marks, sorted(set(y)))\n","for i in range(len(cm)):\n","    for j in range(len(cm[0])):\n","        plt.annotate(str(cm[i][j]), xy=(j, i),\n","                     horizontalalignment='center',\n","                     verticalalignment='center',\n","                     color='white' if cm[i][j] > (0.5*cm.max()) else 'black',\n","                     fontsize=32)\n","plt.rcParams.update({'font.size': 24})\n","plt.savefig('cm-lr.png')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":799},"id":"WyHI00TqBAi8","executionInfo":{"status":"ok","timestamp":1705508977973,"user_tz":-360,"elapsed":1533,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"be55ca9f-5cec-42ad-8b5d-61894073c0fe"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1600x1200 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Printing classification report\n","print(\"Classification report:\\n\", classification_report(y_test, y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JPilDcr2BDow","executionInfo":{"status":"ok","timestamp":1705508977975,"user_tz":-360,"elapsed":59,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"e5d3625a-5679-4ae0-a6f7-65d0aff59ffa"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Classification report:\n","               precision    recall  f1-score   support\n","\n","           0       0.00      0.00      0.00         3\n","           1       0.74      0.93      0.82        15\n","           2       0.85      0.92      0.88        24\n","           3       0.72      0.81      0.76        16\n","           4       0.00      0.00      0.00         5\n","\n","    accuracy                           0.78        63\n","   macro avg       0.46      0.53      0.49        63\n","weighted avg       0.68      0.78      0.73        63\n","\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]}]},{"cell_type":"code","source":["# Calculating metrics\n","accuracy_lr = metrics.accuracy_score(y_test, y_pred)\n","precision_lr = metrics.precision_score(y_test, y_pred, average=None)\n","recall_lr = metrics.recall_score(y_test, y_pred, average=None)\n","f1_score_lr = metrics.f1_score(y_test, y_pred, average=None)"],"metadata":{"id":"L5POc2ZzBFHD","executionInfo":{"status":"ok","timestamp":1705508977975,"user_tz":-360,"elapsed":50,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"f9d5a6d1-349c-4de0-dcd7-8f25fbea3922"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]}]},{"cell_type":"code","source":["# Printing metrics rounded to two decimal points\n","print(\"Accuracy:\", round(accuracy_lr, 2))\n","print(\"Precision:\", [round(p, 2) for p in precision_lr], round(sum(precision_lr) / len(precision_lr), 2))\n","print(\"Recall:\", [round(r, 2) for r in recall_lr], round(sum(recall_lr) / len(recall_lr), 2))\n","print(\"F1-Score:\", [round(f, 2) for f in f1_score_lr], round(sum(f1_score_lr) / len(f1_score_lr), 2))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Yf1gQ3NdBGrd","executionInfo":{"status":"ok","timestamp":1705508977976,"user_tz":-360,"elapsed":45,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"3fc92854-8cb7-41d0-ae2f-5a9da30b7c8a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.78\n","Precision: [0.0, 0.74, 0.85, 0.72, 0.0] 0.46\n","Recall: [0.0, 0.93, 0.92, 0.81, 0.0] 0.53\n","F1-Score: [0.0, 0.82, 0.88, 0.76, 0.0] 0.49\n"]}]},{"cell_type":"markdown","source":["## Naive Bayes"],"metadata":{"id":"Aj66XOUBBunM"}},{"cell_type":"code","source":["# Load the dataset\n","data = pd.read_csv('rearranged_data_rfe_rf.csv')\n","\n","X = data.iloc[:, :feat_nb].values # Features\n","y = data.iloc[:, -1].values # Labels\n","\n","# Splitting the dataset into train and test sets\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state=143017)"],"metadata":{"id":"FjFVcAjQBQH4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Scaling the dataset\n","from sklearn.preprocessing import MinMaxScaler\n","scaling = MinMaxScaler(feature_range=(-1,1)).fit(X_train)\n","X_train = scaling.transform(X_train)\n","X_test = scaling.transform(X_test)"],"metadata":{"id":"_2dffSxJB2O9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Create a Random Forest classifier and fit it to the training set\n","classifier = GaussianNB()\n","classifier.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":75},"id":"4L1iP_ScB3xa","executionInfo":{"status":"ok","timestamp":1705508977981,"user_tz":-360,"elapsed":41,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"2ec0abd5-fd27-46d1-8ee4-1fd34f442ea7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["GaussianNB()"],"text/html":["<style>#sk-container-id-19 {color: black;background-color: white;}#sk-container-id-19 pre{padding: 0;}#sk-container-id-19 div.sk-toggleable {background-color: white;}#sk-container-id-19 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-19 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-19 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-19 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-19 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-19 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-19 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-19 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-19 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-19 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-19 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-19 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-19 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-19 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-19 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-19 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-19 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-19 div.sk-item {position: relative;z-index: 1;}#sk-container-id-19 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-19 div.sk-item::before, #sk-container-id-19 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-19 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-19 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-19 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-19 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-19 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-19 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-19 div.sk-label-container {text-align: center;}#sk-container-id-19 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-19 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-19\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GaussianNB()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-19\" type=\"checkbox\" checked><label for=\"sk-estimator-id-19\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GaussianNB</label><div class=\"sk-toggleable__content\"><pre>GaussianNB()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":209}]},{"cell_type":"code","source":["# Making predictions\n","y_pred = classifier.predict(X_test)"],"metadata":{"id":"dQx3u149B5Gx"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Printing confusion matrix\n","cm = confusion_matrix(y_test, y_pred)\n","print(\"Confusion matrix:\\n\", cm)\n","n_classes = cm.shape[0]\n","class_accuracy = []\n","for i in range(n_classes):\n","    class_accuracy.append(cm[i,i]/np.sum(cm[i,:]))\n","print(\"Accuracy of each class: \", class_accuracy)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4JKaH1_tB6aJ","executionInfo":{"status":"ok","timestamp":1705508977982,"user_tz":-360,"elapsed":36,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"9551d3be-0a11-415f-f7ad-2135d14c66e2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Confusion matrix:\n"," [[ 2  1  0  0  0]\n"," [ 2 13  0  0  0]\n"," [ 0  2 22  0  0]\n"," [ 0  0  0 15  1]\n"," [ 0  0  0  1  4]]\n","Accuracy of each class:  [0.6666666666666666, 0.8666666666666667, 0.9166666666666666, 0.9375, 0.8]\n"]}]},{"cell_type":"code","source":["# Plotting confusion matrix\n","plt.figure(figsize=(16, 12))\n","plt.imshow(cm, interpolation='nearest', cmap='Oranges')\n","plt.title('Confusion matrix')\n","plt.colorbar()\n","plt.xlabel('Predicted Class')\n","plt.ylabel('Actual Class')\n","tick_marks = np.arange(len(set(y)))\n","plt.xticks(tick_marks, sorted(set(y)))\n","plt.yticks(tick_marks, sorted(set(y)))\n","for i in range(len(cm)):\n","    for j in range(len(cm[0])):\n","        plt.annotate(str(cm[i][j]), xy=(j, i),\n","                     horizontalalignment='center',\n","                     verticalalignment='center',\n","                     color='white' if cm[i][j] > (0.5*cm.max()) else 'black',\n","                     fontsize=32)\n","plt.rcParams.update({'font.size': 24})\n","plt.savefig('cm-nb.png')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":799},"id":"58-hWx_eB9HF","executionInfo":{"status":"ok","timestamp":1705508979112,"user_tz":-360,"elapsed":1161,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"8ce9b0f0-dbdf-48a8-cd06-283d7f5c0979"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1600x1200 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Printing classification report\n","print(\"Classification report:\\n\", classification_report(y_test, y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PQR-i5Z9CBLz","executionInfo":{"status":"ok","timestamp":1705508979114,"user_tz":-360,"elapsed":37,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"b956ac0a-6fbf-4c15-a514-c9f0ab015201"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Classification report:\n","               precision    recall  f1-score   support\n","\n","           0       0.50      0.67      0.57         3\n","           1       0.81      0.87      0.84        15\n","           2       1.00      0.92      0.96        24\n","           3       0.94      0.94      0.94        16\n","           4       0.80      0.80      0.80         5\n","\n","    accuracy                           0.89        63\n","   macro avg       0.81      0.84      0.82        63\n","weighted avg       0.90      0.89      0.89        63\n","\n"]}]},{"cell_type":"code","source":["# Calculating metrics\n","accuracy_nb = metrics.accuracy_score(y_test, y_pred)\n","precision_nb = metrics.precision_score(y_test, y_pred, average=None)\n","recall_nb = metrics.recall_score(y_test, y_pred, average=None)\n","f1_score_nb = metrics.f1_score(y_test, y_pred, average=None)"],"metadata":{"id":"SQ83Oh1rCG-T"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Printing metrics rounded to two decimal points\n","print(\"Accuracy:\", round(accuracy_nb, 2))\n","print(\"Precision:\", [round(p, 2) for p in precision_nb], round(sum(precision_nb) / len(precision_nb), 2))\n","print(\"Recall:\", [round(r, 2) for r in recall_nb], round(sum(recall_nb) / len(recall_nb), 2))\n","print(\"F1-Score:\", [round(f, 2) for f in f1_score_nb], round(sum(f1_score_nb) / len(f1_score_nb), 2))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MXaoyotkCJiF","executionInfo":{"status":"ok","timestamp":1705508979115,"user_tz":-360,"elapsed":30,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"2648f4a2-b7a8-488d-a3ea-cc789dcf4043"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.89\n","Precision: [0.5, 0.81, 1.0, 0.94, 0.8] 0.81\n","Recall: [0.67, 0.87, 0.92, 0.94, 0.8] 0.84\n","F1-Score: [0.57, 0.84, 0.96, 0.94, 0.8] 0.82\n"]}]},{"cell_type":"markdown","source":["## Random Forest"],"metadata":{"id":"2TAtyD5vCZoR"}},{"cell_type":"code","source":["# Load the dataset\n","data = pd.read_csv('rearranged_data_rfe_rf.csv')\n","\n","X = data.iloc[:, :feat_rf].values # Features\n","y = data.iloc[:, -1].values # Labels\n","\n","# Splitting the dataset into train and test sets\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state=143017)"],"metadata":{"id":"7TqZJxsDCLLr"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Scaling the dataset\n","from sklearn.preprocessing import MinMaxScaler\n","scaling = MinMaxScaler(feature_range=(-1,1)).fit(X_train)\n","X_train = scaling.transform(X_train)\n","X_test = scaling.transform(X_test)"],"metadata":{"id":"VC9ZUzeOCdZZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Create a Random Forest classifier and fit it to the training set\n","classifier = RandomForestClassifier(n_estimators=100, random_state=143017)\n","classifier.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":75},"id":"MtcNOE3iCe15","executionInfo":{"status":"ok","timestamp":1705508979117,"user_tz":-360,"elapsed":28,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"e6b0904e-ecdb-4cf8-8525-3a4690e1e35e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["RandomForestClassifier(random_state=143017)"],"text/html":["<style>#sk-container-id-20 {color: black;background-color: white;}#sk-container-id-20 pre{padding: 0;}#sk-container-id-20 div.sk-toggleable {background-color: white;}#sk-container-id-20 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-20 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-20 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-20 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-20 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-20 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-20 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-20 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-20 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-20 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-20 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-20 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-20 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-20 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-20 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-20 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-20 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-20 div.sk-item {position: relative;z-index: 1;}#sk-container-id-20 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-20 div.sk-item::before, #sk-container-id-20 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-20 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-20 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-20 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-20 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-20 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-20 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-20 div.sk-label-container {text-align: center;}#sk-container-id-20 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-20 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-20\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestClassifier(random_state=143017)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-20\" type=\"checkbox\" checked><label for=\"sk-estimator-id-20\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier(random_state=143017)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":218}]},{"cell_type":"code","source":["# Making predictions\n","y_pred = classifier.predict(X_test)"],"metadata":{"id":"EHzbxvtYCjWX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Printing confusion matrix\n","cm = confusion_matrix(y_test, y_pred)\n","print(\"Confusion matrix:\\n\", cm)\n","n_classes = cm.shape[0]\n","class_accuracy = []\n","for i in range(n_classes):\n","    class_accuracy.append(cm[i,i]/np.sum(cm[i,:]))\n","print(\"Accuracy of each class: \", class_accuracy)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lT2CF8qoClwN","executionInfo":{"status":"ok","timestamp":1705508979118,"user_tz":-360,"elapsed":27,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"7cec2bff-69b7-4743-d8b4-13968d2d1a8a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Confusion matrix:\n"," [[ 2  1  0  0  0]\n"," [ 1 14  0  0  0]\n"," [ 0  1 22  1  0]\n"," [ 0  0  0 16  0]\n"," [ 0  0  0  3  2]]\n","Accuracy of each class:  [0.6666666666666666, 0.9333333333333333, 0.9166666666666666, 1.0, 0.4]\n"]}]},{"cell_type":"code","source":["# Plotting confusion matrix\n","plt.figure(figsize=(16, 12))\n","plt.imshow(cm, interpolation='nearest', cmap='Oranges')\n","plt.title('Confusion matrix')\n","plt.colorbar()\n","plt.xlabel('Predicted Class')\n","plt.ylabel('Actual Class')\n","tick_marks = np.arange(len(set(y)))\n","plt.xticks(tick_marks, sorted(set(y)))\n","plt.yticks(tick_marks, sorted(set(y)))\n","for i in range(len(cm)):\n","    for j in range(len(cm[0])):\n","        plt.annotate(str(cm[i][j]), xy=(j, i),\n","                     horizontalalignment='center',\n","                     verticalalignment='center',\n","                     color='white' if cm[i][j] > (0.5*cm.max()) else 'black',\n","                     fontsize=32)\n","plt.rcParams.update({'font.size': 24})\n","plt.savefig('cm-rf.png')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":799},"id":"no34fQeBCn8i","executionInfo":{"status":"ok","timestamp":1705508980082,"user_tz":-360,"elapsed":986,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"435f54e5-9018-4014-aa5a-8f4decc8d261"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1600x1200 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Printing classification report\n","print(\"Classification report:\\n\", classification_report(y_test, y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"g8q3lXzwCrMG","executionInfo":{"status":"ok","timestamp":1705508980083,"user_tz":-360,"elapsed":29,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"7e844ca4-306c-4eae-f0e0-f35217a7b1fa"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Classification report:\n","               precision    recall  f1-score   support\n","\n","           0       0.67      0.67      0.67         3\n","           1       0.88      0.93      0.90        15\n","           2       1.00      0.92      0.96        24\n","           3       0.80      1.00      0.89        16\n","           4       1.00      0.40      0.57         5\n","\n","    accuracy                           0.89        63\n","   macro avg       0.87      0.78      0.80        63\n","weighted avg       0.90      0.89      0.88        63\n","\n"]}]},{"cell_type":"code","source":["# Calculating metrics\n","accuracy_rf = metrics.accuracy_score(y_test, y_pred)\n","precision_rf = metrics.precision_score(y_test, y_pred, average=None)\n","recall_rf = metrics.recall_score(y_test, y_pred, average=None)\n","f1_score_rf = metrics.f1_score(y_test, y_pred, average=None)"],"metadata":{"id":"qC4WSvvyCuZq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Printing metrics rounded to two decimal points\n","print(\"Accuracy:\", round(accuracy_rf, 2))\n","print(\"Precision:\", [round(p, 2) for p in precision_rf], round(sum(precision_rf) / len(precision_rf), 2))\n","print(\"Recall:\", [round(r, 2) for r in recall_rf], round(sum(recall_rf) / len(recall_rf), 2))\n","print(\"F1-Score:\", [round(f, 2) for f in f1_score_rf], round(sum(f1_score_rf) / len(f1_score_rf), 2))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Frwq7KRXCwWd","executionInfo":{"status":"ok","timestamp":1705508980085,"user_tz":-360,"elapsed":25,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"f1325cad-f736-44d5-8b84-b9912dcc92f5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.89\n","Precision: [0.67, 0.88, 1.0, 0.8, 1.0] 0.87\n","Recall: [0.67, 0.93, 0.92, 1.0, 0.4] 0.78\n","F1-Score: [0.67, 0.9, 0.96, 0.89, 0.57] 0.8\n"]}]},{"cell_type":"markdown","source":["## SVM"],"metadata":{"id":"0LzCRLR3C1JI"}},{"cell_type":"code","source":["# Load the dataset\n","data = pd.read_csv('rearranged_data_rfe_rf.csv')\n","\n","X = data.iloc[:, :feat_svm].values # Features\n","y = data.iloc[:, -1].values # Labels\n","\n","# Splitting the dataset into train and test sets\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state=143017)"],"metadata":{"id":"uni_PszcCyah"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Scaling the dataset\n","from sklearn.preprocessing import MinMaxScaler\n","scaling = MinMaxScaler(feature_range=(-1,1)).fit(X_train)\n","X_train = scaling.transform(X_train)\n","X_test = scaling.transform(X_test)"],"metadata":{"id":"r_dKBtdYDJoq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Create a Random Forest classifier and fit it to the training set\n","classifier = SVC(kernel=\"linear\", random_state=143036)\n","classifier.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":75},"id":"xFGcroA-DLEZ","executionInfo":{"status":"ok","timestamp":1705508980575,"user_tz":-360,"elapsed":35,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"c658f459-263c-4ee7-c33d-8e63060035e7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["SVC(kernel='linear', random_state=143036)"],"text/html":["<style>#sk-container-id-21 {color: black;background-color: white;}#sk-container-id-21 pre{padding: 0;}#sk-container-id-21 div.sk-toggleable {background-color: white;}#sk-container-id-21 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-21 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-21 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-21 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-21 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-21 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-21 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-21 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-21 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-21 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-21 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-21 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-21 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-21 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-21 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-21 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-21 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-21 div.sk-item {position: relative;z-index: 1;}#sk-container-id-21 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-21 div.sk-item::before, #sk-container-id-21 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-21 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-21 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-21 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-21 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-21 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-21 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-21 div.sk-label-container {text-align: center;}#sk-container-id-21 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-21 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-21\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>SVC(kernel=&#x27;linear&#x27;, random_state=143036)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-21\" type=\"checkbox\" checked><label for=\"sk-estimator-id-21\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SVC</label><div class=\"sk-toggleable__content\"><pre>SVC(kernel=&#x27;linear&#x27;, random_state=143036)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":227}]},{"cell_type":"code","source":["# Making predictions\n","y_pred = classifier.predict(X_test)"],"metadata":{"id":"LSE6iHqIDNAX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Printing confusion matrix\n","cm = confusion_matrix(y_test, y_pred)\n","print(\"Confusion matrix:\\n\", cm)\n","n_classes = cm.shape[0]\n","class_accuracy = []\n","for i in range(n_classes):\n","    class_accuracy.append(cm[i,i]/np.sum(cm[i,:]))\n","print(\"Accuracy of each class: \", class_accuracy)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NbT0qMNKDOgH","executionInfo":{"status":"ok","timestamp":1705508980578,"user_tz":-360,"elapsed":33,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"7d986fd1-360f-4fe6-f51d-1ccce9e42a5d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Confusion matrix:\n"," [[ 2  1  0  0  0]\n"," [ 0 15  0  0  0]\n"," [ 0  1 21  2  0]\n"," [ 0  0  2 14  0]\n"," [ 0  0  0  4  1]]\n","Accuracy of each class:  [0.6666666666666666, 1.0, 0.875, 0.875, 0.2]\n"]}]},{"cell_type":"code","source":["# Plotting confusion matrix\n","plt.figure(figsize=(16, 12))\n","plt.imshow(cm, interpolation='nearest', cmap='Oranges')\n","plt.title('Confusion matrix')\n","plt.colorbar()\n","plt.xlabel('Predicted Class')\n","plt.ylabel('Actual Class')\n","tick_marks = np.arange(len(set(y)))\n","plt.xticks(tick_marks, sorted(set(y)))\n","plt.yticks(tick_marks, sorted(set(y)))\n","for i in range(len(cm)):\n","    for j in range(len(cm[0])):\n","        plt.annotate(str(cm[i][j]), xy=(j, i),\n","                     horizontalalignment='center',\n","                     verticalalignment='center',\n","                     color='white' if cm[i][j] > (0.5*cm.max()) else 'black',\n","                     fontsize=32)\n","plt.rcParams.update({'font.size': 24})\n","plt.savefig('cm-svm.png')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":799},"id":"mQpy0RgYDQrP","executionInfo":{"status":"ok","timestamp":1705508982038,"user_tz":-360,"elapsed":1487,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"2d7a2d15-d73d-4184-ca78-fdda10108ff6"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1600x1200 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Printing classification report\n","print(\"Classification report:\\n\", classification_report(y_test, y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1m5dnYB5DTGw","executionInfo":{"status":"ok","timestamp":1705508982039,"user_tz":-360,"elapsed":28,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"f45e1b71-1278-47e1-8df5-f154407f5259"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Classification report:\n","               precision    recall  f1-score   support\n","\n","           0       1.00      0.67      0.80         3\n","           1       0.88      1.00      0.94        15\n","           2       0.91      0.88      0.89        24\n","           3       0.70      0.88      0.78        16\n","           4       1.00      0.20      0.33         5\n","\n","    accuracy                           0.84        63\n","   macro avg       0.90      0.72      0.75        63\n","weighted avg       0.86      0.84      0.83        63\n","\n"]}]},{"cell_type":"code","source":["# Calculating metrics\n","accuracy_svm = metrics.accuracy_score(y_test, y_pred)\n","precision_svm = metrics.precision_score(y_test, y_pred, average=None)\n","recall_svm = metrics.recall_score(y_test, y_pred, average=None)\n","f1_score_svm = metrics.f1_score(y_test, y_pred, average=None)"],"metadata":{"id":"9Hu2jB1fDUxO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Printing metrics rounded to two decimal points\n","print(\"Accuracy:\", round(accuracy_svm, 2))\n","print(\"Precision:\", [round(p, 2) for p in precision_svm], round(sum(precision_svm) / len(precision_svm), 2))\n","print(\"Recall:\", [round(r, 2) for r in recall_svm], round(sum(recall_svm) / len(recall_svm), 2))\n","print(\"F1-Score:\", [round(f, 2) for f in f1_score_svm], round(sum(f1_score_svm) / len(f1_score_svm), 2))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aiOvRqPxDW3Z","executionInfo":{"status":"ok","timestamp":1705508982041,"user_tz":-360,"elapsed":22,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"29646c87-0b85-4242-c662-fcc7a8f9e5f7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.84\n","Precision: [1.0, 0.88, 0.91, 0.7, 1.0] 0.9\n","Recall: [0.67, 1.0, 0.88, 0.88, 0.2] 0.72\n","F1-Score: [0.8, 0.94, 0.89, 0.78, 0.33] 0.75\n"]}]},{"cell_type":"markdown","source":["# Comparison"],"metadata":{"id":"b6b9cYASGAFI"}},{"cell_type":"code","source":["# Calculate average precision, recall, and F1-score for all models\n","average_precision_all = lambda precision: round(sum(precision) / len(precision), 2)\n","average_recall_all = lambda recall: round(sum(recall) / len(recall), 2)\n","average_f1_score_all = lambda f1_score: round(sum(f1_score) / len(f1_score), 2)\n","\n","# Update the table\n","table_data = {\n","    'Model': ['Decision Tree', 'KNN', 'Logistic Regression', 'Naive Bayes', 'Random Forest', 'SVM'],\n","    'No of Features': [feat_dt, feat_knn, feat_lr, feat_nb, feat_rf, feat_svm],\n","    'Accuracy': [round(accuracy_dt, 2), round(accuracy_knn, 2), round(accuracy_lr, 2),\n","                 round(accuracy_nb, 2), round(accuracy_rf, 2), round(accuracy_svm, 2)],\n","    'Precision': [average_precision_all(precision_dt), average_precision_all(precision_knn),\n","                  average_precision_all(precision_lr), average_precision_all(precision_nb),\n","                  average_precision_all(precision_rf), average_precision_all(precision_svm)],\n","    'Recall': [average_recall_all(recall_dt), average_recall_all(recall_knn),\n","               average_recall_all(recall_lr), average_recall_all(recall_nb),\n","               average_recall_all(recall_rf), average_recall_all(recall_svm)],\n","    'F1-Score': [average_f1_score_all(f1_score_dt), average_f1_score_all(f1_score_knn),\n","                 average_f1_score_all(f1_score_lr), average_f1_score_all(f1_score_nb),\n","                 average_f1_score_all(f1_score_rf), average_f1_score_all(f1_score_svm)]\n","}\n","\n","# Create DataFrame\n","metrics_df = pd.DataFrame(table_data)\n","\n","# Print the formatted table\n","print(metrics_df.to_markdown(index=False))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HUSvcTHADYrw","executionInfo":{"status":"ok","timestamp":1705508982042,"user_tz":-360,"elapsed":19,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"bbe9ec20-ff30-4eb0-bf21-35321660c75e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["| Model               |   No of Features |   Accuracy |   Precision |   Recall |   F1-Score |\n","|:--------------------|-----------------:|-----------:|------------:|---------:|-----------:|\n","| Decision Tree       |                3 |       0.92 |        0.85 |     0.89 |       0.86 |\n","| KNN                 |                3 |       0.87 |        0.92 |     0.77 |       0.81 |\n","| Logistic Regression |                3 |       0.78 |        0.46 |     0.53 |       0.49 |\n","| Naive Bayes         |                3 |       0.89 |        0.81 |     0.84 |       0.82 |\n","| Random Forest       |                3 |       0.89 |        0.87 |     0.78 |       0.8  |\n","| SVM                 |                3 |       0.84 |        0.9  |     0.72 |       0.75 |\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"agmoE8V0GOI6"},"execution_count":null,"outputs":[]}]}