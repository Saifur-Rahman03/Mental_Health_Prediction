{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"15qXMaDXFEcHIYjoGAu-RFQy8ESeKsTdF","timestamp":1704310045545}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Import Data"],"metadata":{"id":"QnCE6nHdIP91"}},{"cell_type":"code","execution_count":1,"metadata":{"id":"TuRyi4N57nJy","executionInfo":{"status":"ok","timestamp":1728245860546,"user_tz":-360,"elapsed":4104,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}}},"outputs":[],"source":["# Importing libraries\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","from sklearn import svm, metrics\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import classification_report, confusion_matrix, roc_curve, auc\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.svm import SVC\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.naive_bayes import GaussianNB"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"id":"-YJiM2MBqeWu","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1728245884801,"user_tz":-360,"elapsed":24263,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"790c3ea5-c6be-4596-c87c-a7fc20e98d93"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["# Load the dataset\n","file_path = '/content/drive/MyDrive/Colab Notebooks/Mental Health Research/Kruskal-PCA-Rfe/'\n","data = pd.read_csv(file_path + 'rearranged_data_rfe_rf.csv')\n","data.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"o7UMMcjM8F4-","executionInfo":{"status":"ok","timestamp":1728245885408,"user_tz":-360,"elapsed":612,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"99f09c39-c0d2-4635-9aea-63aeab3827cd"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['PCA 1', 'PCA 12', 'PCA 3', 'PCA 18', 'PCA 5', 'PCA 2', 'PCA 22',\n","       'PCA 17', 'PCA 27', 'PCA 19', 'PCA 7', 'PCA 10', 'PCA 25', 'PCA 8',\n","       'PCA 23', 'PCA 16', 'PCA 6', 'PCA 9', 'PCA 14', 'PCA 26', 'PCA 21',\n","       'PCA 15', 'PCA 20', 'PCA 4', 'PCA 11', 'PCA 13', 'PCA 24', 'Class'],\n","      dtype='object')"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["data.shape[1]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kTNJYci74pFp","executionInfo":{"status":"ok","timestamp":1728245885409,"user_tz":-360,"elapsed":31,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"2da8a01d-f8d9-4507-8f80-73d961a00c5c"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["28"]},"metadata":{},"execution_count":4}]},{"cell_type":"markdown","source":["# Select No. of Features"],"metadata":{"id":"Fmj1nuU1HsA5"}},{"cell_type":"code","source":["feat_knn = 14"],"metadata":{"id":"owH6fXUFHvWh","executionInfo":{"status":"ok","timestamp":1728245885414,"user_tz":-360,"elapsed":33,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}}},"execution_count":5,"outputs":[]},{"cell_type":"markdown","source":["# KNN"],"metadata":{"id":"iUlm9BCJ_oNb"}},{"cell_type":"code","source":["# Load the dataset\n","#data = pd.read_csv('rearranged_data_rfe_rf.csv')\n","\n","X = data.iloc[:, :feat_knn].values # Features\n","y = data.iloc[:, -1].values # Labels\n","\n","# Splitting the dataset into train and test sets\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state=143017)"],"metadata":{"id":"-LHr4o8u_Ml9","executionInfo":{"status":"ok","timestamp":1728245885414,"user_tz":-360,"elapsed":32,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["# Scaling the dataset\n","from sklearn.preprocessing import MinMaxScaler\n","scaling = MinMaxScaler(feature_range=(-1,1)).fit(X_train)\n","X_train = scaling.transform(X_train)\n","X_test = scaling.transform(X_test)"],"metadata":{"id":"XDK4TEG5_5sQ","executionInfo":{"status":"ok","timestamp":1728245885415,"user_tz":-360,"elapsed":31,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["# Create a Random Forest classifier and fit it to the training set\n","classifier = KNeighborsClassifier()\n","classifier.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":80},"id":"8855TUwq_8Db","executionInfo":{"status":"ok","timestamp":1728245885415,"user_tz":-360,"elapsed":30,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"224701b8-3633-468b-9c09-b1e7e8b99e53"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["KNeighborsClassifier()"],"text/html":["<style>#sk-container-id-1 {\n","  /* Definition of color scheme common for light and dark mode */\n","  --sklearn-color-text: black;\n","  --sklearn-color-line: gray;\n","  /* Definition of color scheme for unfitted estimators */\n","  --sklearn-color-unfitted-level-0: #fff5e6;\n","  --sklearn-color-unfitted-level-1: #f6e4d2;\n","  --sklearn-color-unfitted-level-2: #ffe0b3;\n","  --sklearn-color-unfitted-level-3: chocolate;\n","  /* Definition of color scheme for fitted estimators */\n","  --sklearn-color-fitted-level-0: #f0f8ff;\n","  --sklearn-color-fitted-level-1: #d4ebff;\n","  --sklearn-color-fitted-level-2: #b3dbfd;\n","  --sklearn-color-fitted-level-3: cornflowerblue;\n","\n","  /* Specific color for light theme */\n","  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n","  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-icon: #696969;\n","\n","  @media (prefers-color-scheme: dark) {\n","    /* Redefinition of color scheme for dark theme */\n","    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n","    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-icon: #878787;\n","  }\n","}\n","\n","#sk-container-id-1 {\n","  color: var(--sklearn-color-text);\n","}\n","\n","#sk-container-id-1 pre {\n","  padding: 0;\n","}\n","\n","#sk-container-id-1 input.sk-hidden--visually {\n","  border: 0;\n","  clip: rect(1px 1px 1px 1px);\n","  clip: rect(1px, 1px, 1px, 1px);\n","  height: 1px;\n","  margin: -1px;\n","  overflow: hidden;\n","  padding: 0;\n","  position: absolute;\n","  width: 1px;\n","}\n","\n","#sk-container-id-1 div.sk-dashed-wrapped {\n","  border: 1px dashed var(--sklearn-color-line);\n","  margin: 0 0.4em 0.5em 0.4em;\n","  box-sizing: border-box;\n","  padding-bottom: 0.4em;\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","#sk-container-id-1 div.sk-container {\n","  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n","     but bootstrap.min.css set `[hidden] { display: none !important; }`\n","     so we also need the `!important` here to be able to override the\n","     default hidden behavior on the sphinx rendered scikit-learn.org.\n","     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n","  display: inline-block !important;\n","  position: relative;\n","}\n","\n","#sk-container-id-1 div.sk-text-repr-fallback {\n","  display: none;\n","}\n","\n","div.sk-parallel-item,\n","div.sk-serial,\n","div.sk-item {\n","  /* draw centered vertical line to link estimators */\n","  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n","  background-size: 2px 100%;\n","  background-repeat: no-repeat;\n","  background-position: center center;\n","}\n","\n","/* Parallel-specific style estimator block */\n","\n","#sk-container-id-1 div.sk-parallel-item::after {\n","  content: \"\";\n","  width: 100%;\n","  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n","  flex-grow: 1;\n","}\n","\n","#sk-container-id-1 div.sk-parallel {\n","  display: flex;\n","  align-items: stretch;\n","  justify-content: center;\n","  background-color: var(--sklearn-color-background);\n","  position: relative;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item {\n","  display: flex;\n","  flex-direction: column;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:first-child::after {\n","  align-self: flex-end;\n","  width: 50%;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:last-child::after {\n","  align-self: flex-start;\n","  width: 50%;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:only-child::after {\n","  width: 0;\n","}\n","\n","/* Serial-specific style estimator block */\n","\n","#sk-container-id-1 div.sk-serial {\n","  display: flex;\n","  flex-direction: column;\n","  align-items: center;\n","  background-color: var(--sklearn-color-background);\n","  padding-right: 1em;\n","  padding-left: 1em;\n","}\n","\n","\n","/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n","clickable and can be expanded/collapsed.\n","- Pipeline and ColumnTransformer use this feature and define the default style\n","- Estimators will overwrite some part of the style using the `sk-estimator` class\n","*/\n","\n","/* Pipeline and ColumnTransformer style (default) */\n","\n","#sk-container-id-1 div.sk-toggleable {\n","  /* Default theme specific background. It is overwritten whether we have a\n","  specific estimator or a Pipeline/ColumnTransformer */\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","/* Toggleable label */\n","#sk-container-id-1 label.sk-toggleable__label {\n","  cursor: pointer;\n","  display: block;\n","  width: 100%;\n","  margin-bottom: 0;\n","  padding: 0.5em;\n","  box-sizing: border-box;\n","  text-align: center;\n","}\n","\n","#sk-container-id-1 label.sk-toggleable__label-arrow:before {\n","  /* Arrow on the left of the label */\n","  content: \"▸\";\n","  float: left;\n","  margin-right: 0.25em;\n","  color: var(--sklearn-color-icon);\n","}\n","\n","#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {\n","  color: var(--sklearn-color-text);\n","}\n","\n","/* Toggleable content - dropdown */\n","\n","#sk-container-id-1 div.sk-toggleable__content {\n","  max-height: 0;\n","  max-width: 0;\n","  overflow: hidden;\n","  text-align: left;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content pre {\n","  margin: 0.2em;\n","  border-radius: 0.25em;\n","  color: var(--sklearn-color-text);\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content.fitted pre {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n","  /* Expand drop-down */\n","  max-height: 200px;\n","  max-width: 100%;\n","  overflow: auto;\n","}\n","\n","#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n","  content: \"▾\";\n","}\n","\n","/* Pipeline/ColumnTransformer-specific style */\n","\n","#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator-specific style */\n","\n","/* Colorize estimator box */\n","#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-label label.sk-toggleable__label,\n","#sk-container-id-1 div.sk-label label {\n","  /* The background is the default theme color */\n","  color: var(--sklearn-color-text-on-default-background);\n","}\n","\n","/* On hover, darken the color of the background */\n","#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","/* Label box, darken color on hover, fitted */\n","#sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator label */\n","\n","#sk-container-id-1 div.sk-label label {\n","  font-family: monospace;\n","  font-weight: bold;\n","  display: inline-block;\n","  line-height: 1.2em;\n","}\n","\n","#sk-container-id-1 div.sk-label-container {\n","  text-align: center;\n","}\n","\n","/* Estimator-specific */\n","#sk-container-id-1 div.sk-estimator {\n","  font-family: monospace;\n","  border: 1px dotted var(--sklearn-color-border-box);\n","  border-radius: 0.25em;\n","  box-sizing: border-box;\n","  margin-bottom: 0.5em;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","/* on hover */\n","#sk-container-id-1 div.sk-estimator:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Specification for estimator info (e.g. \"i\" and \"?\") */\n","\n","/* Common style for \"i\" and \"?\" */\n","\n",".sk-estimator-doc-link,\n","a:link.sk-estimator-doc-link,\n","a:visited.sk-estimator-doc-link {\n","  float: right;\n","  font-size: smaller;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1em;\n","  height: 1em;\n","  width: 1em;\n","  text-decoration: none !important;\n","  margin-left: 1ex;\n","  /* unfitted */\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-unfitted-level-1);\n","}\n","\n",".sk-estimator-doc-link.fitted,\n","a:link.sk-estimator-doc-link.fitted,\n","a:visited.sk-estimator-doc-link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","/* Span, style for the box shown on hovering the info icon */\n",".sk-estimator-doc-link span {\n","  display: none;\n","  z-index: 9999;\n","  position: relative;\n","  font-weight: normal;\n","  right: .2ex;\n","  padding: .5ex;\n","  margin: .5ex;\n","  width: min-content;\n","  min-width: 20ex;\n","  max-width: 50ex;\n","  color: var(--sklearn-color-text);\n","  box-shadow: 2pt 2pt 4pt #999;\n","  /* unfitted */\n","  background: var(--sklearn-color-unfitted-level-0);\n","  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n","}\n","\n",".sk-estimator-doc-link.fitted span {\n","  /* fitted */\n","  background: var(--sklearn-color-fitted-level-0);\n","  border: var(--sklearn-color-fitted-level-3);\n","}\n","\n",".sk-estimator-doc-link:hover span {\n","  display: block;\n","}\n","\n","/* \"?\"-specific style due to the `<a>` HTML tag */\n","\n","#sk-container-id-1 a.estimator_doc_link {\n","  float: right;\n","  font-size: 1rem;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1rem;\n","  height: 1rem;\n","  width: 1rem;\n","  text-decoration: none;\n","  /* unfitted */\n","  color: var(--sklearn-color-unfitted-level-1);\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","}\n","\n","#sk-container-id-1 a.estimator_doc_link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","#sk-container-id-1 a.estimator_doc_link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","#sk-container-id-1 a.estimator_doc_link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","}\n","</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KNeighborsClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;KNeighborsClassifier<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.neighbors.KNeighborsClassifier.html\">?<span>Documentation for KNeighborsClassifier</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>KNeighborsClassifier()</pre></div> </div></div></div></div>"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["# Making predictions\n","y_pred = classifier.predict(X_test)"],"metadata":{"id":"jlotVgtZ_9li","executionInfo":{"status":"ok","timestamp":1728245885416,"user_tz":-360,"elapsed":25,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["# Printing confusion matrix\n","cm = confusion_matrix(y_test, y_pred)\n","print(\"Confusion matrix:\\n\", cm)\n","n_classes = cm.shape[0]\n","class_accuracy = []\n","for i in range(n_classes):\n","    class_accuracy.append(cm[i,i]/np.sum(cm[i,:]))\n","print(\"Accuracy of each class: \", class_accuracy)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"klFUAwGx__sA","executionInfo":{"status":"ok","timestamp":1728245885417,"user_tz":-360,"elapsed":25,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"1567021d-d296-42c2-fbe0-2799f1f2d261"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["Confusion matrix:\n"," [[10  2  0]\n"," [ 0 29  1]\n"," [ 0  6 15]]\n","Accuracy of each class:  [0.8333333333333334, 0.9666666666666667, 0.7142857142857143]\n"]}]},{"cell_type":"code","source":["# Plotting confusion matrix\n","plt.figure(figsize=(16, 12))\n","plt.imshow(cm, interpolation='nearest', cmap='Oranges')\n","plt.title('Confusion matrix')\n","plt.colorbar()\n","plt.xlabel('Predicted Class')\n","plt.ylabel('Actual Class')\n","tick_marks = np.arange(len(set(y)))\n","plt.xticks(tick_marks, sorted(set(y)))\n","plt.yticks(tick_marks, sorted(set(y)))\n","for i in range(len(cm)):\n","    for j in range(len(cm[0])):\n","        plt.annotate(str(cm[i][j]), xy=(j, i),\n","                     horizontalalignment='center',\n","                     verticalalignment='center',\n","                     color='white' if cm[i][j] > (0.5*cm.max()) else 'black',\n","                     fontsize=32)\n","plt.rcParams.update({'font.size': 24})\n","plt.savefig('cm-knn.png')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"i24fmevQABwg","executionInfo":{"status":"ok","timestamp":1728245888750,"user_tz":-360,"elapsed":3354,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"330aad4e-698b-4fed-e2ba-91ef5cdbe4ac"},"execution_count":11,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1600x1200 with 2 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAABF0AAAPxCAYAAAAontJJAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAAB610lEQVR4nOzdeZxd4/0H8O+ZSTLZV7JJRBZi30nVFlsIQVBEtWKpai0t0VLVEn6tFC1atVSpqNKqvaVNEUtqiT2W2iMkyEoWmSSTZe7vjzCczCTmJvdk7k3e79frvOo89yzfGRXmM9/neZJcLpcLAAAAAAqqrKELAAAAAFgTCV0AAAAAMiB0AQAAAMiA0AUAAAAgA0IXAAAAgAwIXQAAAAAyIHQBAAAAyIDQBQAAACADQhcAAACADAhdACAjb7/9dgwYMCDatGkTSZLEPffcU9Dnv/fee5EkSYwcObKgz10TbLDBBnHsscc2dBkAwFpO6ALAGm38+PFx0kknRa9evaJp06bRunXr2HnnneO3v/1tzJ8/P9N3Dx06NF555ZX45S9/GTfffHNsv/32mb5vTfTaa6/F8OHD47333mvoUgAA8pbkcrlcQxcBAFm4//774/DDD4+Kioo45phjYvPNN4+FCxfG448/HnfeeWcce+yxcd1112Xy7vnz50fz5s3j3HPPjV/84heZvCOXy0VVVVU0btw4ysvLM3lHQ7vjjjvi8MMPj0ceeST69+9f7/uqqqqirKwsGjdunF1xAABfoVFDFwAAWZgwYUIMGTIkevToEQ8//HB06dKl5rNTTjkl3nnnnbj//vsze//06dMjIqJt27aZvSNJkmjatGlmzy81uVwuFixYEM2aNYuKioqGLgcAwPQiANZMl1xyScydOzduuOGGVODyuT59+sQPf/jDmvPFixfH//3f/0Xv3r2joqIiNthgg/jpT38aVVVVqfs22GCDGDRoUDz++OOx4447RtOmTaNXr17x5z//ueaa4cOHR48ePSIi4sc//nEkSRIbbLBBREQce+yxNX/9ZcOHD48kSVJjDz74YOyyyy7Rtm3baNmyZfTt2zd++tOf1ny+vDVdHn744dh1112jRYsW0bZt2zj44IPj9ddfr/N977zzThx77LHRtm3baNOmTRx33HExb9685X9jP9O/f//YfPPN4+WXX47dd989mjdvHn369Ik77rgjIiIee+yx6NevXzRr1iz69u0bDz30UOr+999/P04++eTo27dvNGvWLDp06BCHH354ahrRyJEj4/DDD4+IiD322COSJIkkSeLRRx+NiC/+XvznP/+J7bffPpo1axZ/+MMfaj77fE2XXC4Xe+yxR6y77roxbdq0mucvXLgwtthii+jdu3dUVlZ+5dcMAJAvoQsAa6R//vOf0atXr/j6179er+u/853vxHnnnRfbbrttXH755bH77rvHiBEjYsiQIbWufeedd+Ib3/hG7LPPPvGb3/wm2rVrF8cee2z873//i4iIQw89NC6//PKIiDjqqKPi5ptvjiuuuCKv+v/3v//FoEGDoqqqKi688ML4zW9+EwcddFA88cQTK7zvoYcein333TemTZsWw4cPj2HDhsWTTz4ZO++8c53rohxxxBHx6aefxogRI+KII46IkSNHxgUXXFCvGmfOnBmDBg2Kfv36xSWXXBIVFRUxZMiQuO2222LIkCGx//77x69+9auorKyMb3zjG/Hpp5/W3Pvss8/Gk08+GUOGDInf/e538b3vfS9Gjx4d/fv3rwl9dtttt/jBD34QERE//elP4+abb46bb745Ntlkk5rnvPnmm3HUUUfFPvvsE7/97W9j6623rlVnkiTxpz/9KRYsWBDf+973asbPP//8+N///hc33nhjtGjRol5fMwBAXnIAsIaZPXt2LiJyBx98cL2uHzduXC4ict/5zndS4z/60Y9yEZF7+OGHa8Z69OiRi4jcmDFjasamTZuWq6ioyJ155pk1YxMmTMhFRO7SSy9NPXPo0KG5Hj161Krh/PPPz335X8uXX355LiJy06dPX27dn7/jxhtvrBnbeuutcx07dsx9/PHHNWMvvfRSrqysLHfMMcfUet/xxx+feuYhhxyS69Chw3Lf+bndd989FxG5W2+9tWbsjTfeyEVErqysLDd27Nia8f/85z+16pw3b16tZz711FO5iMj9+c9/rhm7/fbbcxGRe+SRR2pd//nfi1GjRtX52dChQ1Njf/jDH3IRkfvLX/6SGzt2bK68vDx3+umnf+XXCgCwsnS6ALDGmTNnTkREtGrVql7X/+tf/4qIiGHDhqXGzzzzzIiIWmu/bLrpprHrrrvWnK+77rrRt2/fePfdd1e65mV9vhbMvffeG9XV1fW6Z/LkyTFu3Lg49thjo3379jXjW265Zeyzzz41X+eXfbnzIyJi1113jY8//rjme7giLVu2THUC9e3bN9q2bRubbLJJ9OvXr2b887/+8venWbNmNX+9aNGi+Pjjj6NPnz7Rtm3beOGFF+rx1S7Vs2fP2Hfffet17Xe/+93Yd99947TTTotvf/vb0bt377jooovq/S4AgHwJXQBY47Ru3ToiIjWdZUXef//9KCsriz59+qTGO3fuHG3bto33338/Nb7++uvXeka7du1i5syZK1lxbUceeWTsvPPO8Z3vfCc6deoUQ4YMib///e8rDGA+r7Nv3761Pttkk01ixowZtdYuWfZradeuXUREvb6Wbt261VqHpk2bNtG9e/daY8s+c/78+XHeeedF9+7do6KiItZZZ51Yd911Y9asWTF79uyvfPfnevbsWe9rIyJuuOGGmDdvXrz99tsxcuTIVPgDAFBoQhcA1jitW7eOrl27xquvvprXfcsGCMuzvO2Zc7ncSr9jyZIlqfNmzZrFmDFj4qGHHopvf/vb8fLLL8eRRx4Z++yzT61rV8WqfC3Lu7c+zzzttNPil7/8ZRxxxBHx97//PR544IF48MEHo0OHDvXu7ImIvEOTRx99tGZx5FdeeSWvewEA8iV0AWCNNGjQoBg/fnw89dRTX3ltjx49orq6Ot5+++3U+NSpU2PWrFk1OxEVQrt27WLWrFm1xpftpomIKCsri7322isuu+yyeO211+KXv/xlPPzww/HII4/U+ezP63zzzTdrffbGG2/EOuusUzQLxt5xxx0xdOjQ+M1vflOzKPEuu+xS63tT3yCsPiZPnhynnXZaDBgwIAYNGhQ/+tGP6vy+AwAUitAFgDXSWWedFS1atIjvfOc7MXXq1Fqfjx8/Pn77299GRMT+++8fEVFrh6HLLrssIiIOOOCAgtXVu3fvmD17drz88ss1Y5MnT4677747dd0nn3xS697Pd+ZZdhvrz3Xp0iW23nrruOmmm1LhxauvvhoPPPBAzddZDMrLy2t101x55ZW1ung+D4nqCqrydeKJJ0Z1dXXccMMNcd1110WjRo3ihBNOqFdXDwDAymjU0AUAQBZ69+4dt956axx55JGxySabxDHHHBObb755LFy4MJ588sm4/fbb49hjj42IiK222iqGDh0a1113XcyaNSt23333eOaZZ+Kmm26KwYMHxx577FGwuoYMGRJnn312HHLIIfGDH/wg5s2bF9dcc01stNFGqQVkL7zwwhgzZkwccMAB0aNHj5g2bVpcffXV0a1bt9hll12W+/xLL700Bg4cGDvttFOccMIJMX/+/LjyyiujTZs2MXz48IJ9Hatq0KBBcfPNN0ebNm1i0003jaeeeioeeuih6NChQ+q6rbfeOsrLy+Piiy+O2bNnR0VFRey5557RsWPHvN534403xv333x8jR46Mbt26RcTSkOdb3/pWXHPNNXHyyScX7GsDAPic0AWANdZBBx0UL7/8clx66aVx7733xjXXXBMVFRWx5ZZbxm9+85s48cQTa669/vrro1evXjFy5Mi4++67o3PnznHOOefE+eefX9CaOnToEHfffXcMGzYszjrrrOjZs2eMGDEi3n777VToctBBB8V7770Xf/rTn2LGjBmxzjrrxO677x4XXHBBzcK0ddl7771j1KhRcf7558d5550XjRs3jt133z0uvvjivBedzdJvf/vbKC8vj1tuuSUWLFgQO++8czz00EO1diLq3LlzXHvttTFixIg44YQTYsmSJfHII4/kFbp88MEHccYZZ8SBBx4YQ4cOrRk/+uij484774yzzjorBg4cWFTfHwBgzZDk9NQCAAAAFJw1XQAAAAAyIHQBAAAAyIDQBQAAACADQhcAAACADAhdAAAAADIgdAEAAADIQKOGLmBVVFdXx0cffRStWrWKJEkauhwAAADWELlcLj799NPo2rVrlJWtXf0KCxYsiIULFzZ0GXlr0qRJNG3atKHLSCnp0OWjjz6K7t27N3QZAAAArKEmTZoU3bp1a+gyVpsFCxbEui2bxdwlDV1J/jp37hwTJkwoquClpEOXVq1aRUTE+38+OVo3r2jgagBWTbLdtxu6BICCSJq2begSAFbZnE8/je4bbVXzc+faYuHChTF3ScQZvcqjooQafKqqIy5/d0osXLhQ6FIon08pat28QugClLyk9dr1L3RgzZU09ecZsOZYW5eyqCiLqCgvpa8919AF1KmkQxcAAAAgG6UUuRSrEmoWAgAAACgdQhcAAACADAhdAAAAADJgTRcAAAAgJUmWHqWiWGvV6QIAAACQAaELAAAAQAaELgAAAAAZsKYLAAAAkFIWpdWlUay1FmtdAAAAACVN6AIAAACQAdOLAAAAgBRbRheGThcAAACADAhdAAAAADIgdAEAAADIgDVdAAAAgJTks6NUFGutOl0AAAAAMiB0AQAAAMiA6UUAAABAii2jC0OnCwAAAEAGhC4AAAAAGRC6AAAAAGTAmi4AAABASlmUVpdGsdZarHUBAAAAlDShCwAAAEAGhC4AAAAAGbCmCwAAAJCSJEuPUlGstep0AQAAAMiA0AUAAAAgA6YXAQAAACnJZ0epKNZadboAAAAAZEDoAgAAAJABoQsAAABABqzpAgAAAKTYMrowdLoAAAAAZEDoAgAAAJAB04sAAACAFFtGF4ZOFwAAAIAMCF0AAAAAMiB0AQAAAMiANV0AAACAlLJk6VEqirVWnS4AAAAAGRC6AAAAAGRA6AIAAACQAWu6AAAAACnJZ0epKNZadboAAAAAZEDoAgAAAJAB04sAAACAlCRZepSKYq1VpwsAAABABoQuAAAAABkQugAAAABkwJouAAAAQIotowtDpwsAAABABoQuAAAAABkwvQgAAABISZJclBXrnJ06JEmuoUuok04XAAAAgAwIXQAAAAAyIHQBAAAAyIA1XQAAAIAUW0YXhk4XAAAAgAwIXQAAAAAyIHQBAAAAyIA1XQAAAIAUa7oUhk4XAAAAgAwIXQAAAAAyYHoRAAAAkJIkS49SUay16nQBAAAAyIDQBQAAACADQhcAAACADFjTBQAAAEixZXRh6HQBAAAAyIDQBQAAACADQhcAAACADFjTBQAAAEgpS5YepaJYa9XpAgAAAJABoQsAAABABkwvAgAAAFJsGV0YOl0AAAAAMiB0AQAAAMiA0AUAAAAgA9Z0AQAAAFKSZOlRKoq1Vp0uAAAAABkQugAAAABkwPQiAAAAIMWW0YWh0wUAAAAgA0IXAAAAgAwIXQAAAAAyYE0XAAAAIKUsWXqUimKtVacLAAAAQAaELgAAAAAZELoAAAAAZMCaLgAAAEBK8tlRKoq1Vp0uAAAAABkQugAAAABkwPQiAAAAICVJlh6lolhr1ekCAAAAkAGhCwAAAEAGhC4AAAAAGbCmCwAAAJBiy+jC0OkCAAAAkAGhCwAAAEAGTC8CAAAAUmwZXRg6XQAAAAAyIHQBAAAAyIDQBQAAACAD1nQBAAAAUpIorS6NIl3SpaS+hwAAAAAlQ+gCAAAAkAGhCwAAAEAGrOkCAAAApCTJ0qNUFGutOl0AAAAAMiB0AQAAAMiA6UUAAABAShLFuw1zXYq1Vp0uAAAAABkQugAAAABkQOgCAAAAkAFrugAAAAApZRFRVqwLpdShWDtKirUuAAAAgJImdAEAAADIgOlFAAAAQIotowtDpwsAAACwVhkxYkTssMMO0apVq+jYsWMMHjw43nzzzdQ1/fv3jyRJUsf3vve9vN4jdAEAAADWKo899liccsopMXbs2HjwwQdj0aJFMWDAgKisrExdd+KJJ8bkyZNrjksuuSSv95heBAAAAKxVRo0alTofOXJkdOzYMZ5//vnYbbfdasabN28enTt3Xun36HQBAAAAUsqS0jsiIubMmZM6qqqq6vX1zp49OyIi2rdvnxq/5ZZbYp111onNN988zjnnnJg3b15e30edLgAAAMAaoXv37qnz888/P4YPH77Ce6qrq+P000+PnXfeOTbffPOa8W9+85vRo0eP6Nq1a7z88stx9tlnx5tvvhl33XVXvesRugAAAABrhEmTJkXr1q1rzisqKr7ynlNOOSVeffXVePzxx1Pj3/3ud2v+eosttoguXbrEXnvtFePHj4/evXvXqx6hCwAAALBGaN26dSp0+Sqnnnpq3HfffTFmzJjo1q3bCq/t169fRES88847QhcAAABg5ZRFaS0Cm2+tuVwuTjvttLj77rvj0UcfjZ49e37lPePGjYuIiC5dutT7PUIXAAAAYK1yyimnxK233hr33ntvtGrVKqZMmRIREW3atIlmzZrF+PHj49Zbb439998/OnToEC+//HKcccYZsdtuu8WWW25Z7/cIXaDA3v7wk3ju7Snx0cefRtWiJdG6eZPo3aVdfH3T9aJNi6YNXR4AQMmqrq6O5198KV559bWYNn1G5HK56NChfWy68UbRb4ftonHjxg1dIlAirrnmmoiI6N+/f2r8xhtvjGOPPTaaNGkSDz30UFxxxRVRWVkZ3bt3j8MOOyx+9rOf5fUeoQtrpFwuF+98NDOeeWtyPPfW5Hj2rcnx4vipsWDh4tR1S/71k4K976aHXonL7nom/vf+jDqvadyoLAbt2CfOO3qX2LJnx4K8F2B5qqqq4o23343X3nwnps/4JD6dWxktWjSL9m3bxka9N4htt9osmjRp0tBlAtTL3Llz49Irroprr78ppk2fXuc1bdq0jmOPHhLnnnVGrLvuOqu5QljzJMnSo1TkW2sul1vh5927d4/HHntsFSpaSujCGmPu/IXxq78/Fc++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Y8SIEfW6b/bs2RER0b59+4iIeP7552PRokWx995711yz8cYbx/rrrx9PPfVUvevR6QIAAACsESZNmhStW7euOa+ry2VZ1dXVcfrpp8fOO+8cm2++eURETJkyJZo0aRJt27ZNXdupU6eYMmVKvesRugAAAAApJTe76LNaW7dunQpd6uOUU06JV199NR5//PGC12V6EQAAALBWOvXUU+O+++6LRx55JLp161Yz3rlz51i4cGHMmjUrdf3UqVOjc+fO9X6+0AUAAABYq+RyuTj11FPj7rvvjocffjh69uyZ+ny77baLxo0bx+jRo2vG3nzzzZg4cWLstNNO9X6P6UUAAADAWuWUU06JW2+9Ne69995o1apVzTotbdq0iWbNmkWbNm3ihBNOiGHDhkX79u2jdevWcdppp8VOO+1U752LIoQuAAAAwDKSJImkhBZ1ybfUa665JiIi+vfvnxq/8cYb49hjj42IiMsvvzzKysrisMMOi6qqqth3333j6quvzus9QhcAAABgrZLL5b7ymqZNm8ZVV10VV1111Uq/x5ouAAAAABkQugAAAABkwPQiAAAAICVJ8l8npSEVa606XQAAAAAyIHQBAAAAyIDpRQAAAMAySmx+UZHS6QIAAACQAaELAAAAQAaELgAAAAAZsKYLAAAAkGLL6MLQ6QIAAACQAaELAAAAQAaELgAAAAAZWCPWdCnb+bQoa92qocsAWCXDt+3S0CUAFMT5z0xo6BIAVllu8YKGLqFBJUkSSbEulFKHYi1VpwsAAABABoQuAAAAABlYI6YXAQAAAIVjelFh6HQBAAAAyIDQBQAAACADQhcAAACADFjTBQAAAEhJkuJdJ6UuxVqrThcAAACADAhdAAAAADJgehEAAACQVnLzixq6gLrpdAEAAADIgNAFAAAAIANCFwAAAIAMWNMFAAAASCm5JV2KtFadLgAAAAAZELoAAAAAZEDoAgAAAJABa7oAAAAAaUkSSbEulFKXIi1VpwsAAABABoQuAAAAABkwvQgAAABIsWV0Yeh0AQAAAMiA0AUAAAAgA0IXAAAAgAxY0wUAAABIK7lFXRq6gLrpdAEAAADIgNAFAAAAIAOmFwEAAAApSZJEUkLTi4q1VJ0uAAAAABkQugAAAABkQOgCAAAAkAFrugAAAAApJbdjdJHWqtMFAAAAIANCFwAAAIAMCF0AAAAA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v++T99O/5en19fq12QIAFIO5c+fGuHHjYty4cRERMWHChBg3blxMnDgx5s6dGz/+8Y9j7Nix8d5778Xo0aPj4IMPjj59+sS+++5b73fUO3R56aWXYr/99lvu5wMGDIjnn3++3i+GYvDaG2+mznfcftu8n/G1HbdLnb/+xturVBPAykiSJNp12yA1Nnf6lOVe36xtu9R51aez837ngrnp7td1evYtqbnfAMAKJGWld+Tpueeei2222Sa22WabiIgYNmxYbLPNNnHeeedFeXl5vPzyy3HQQQfFRhttFCeccEJst9128d///jevKUv1W7giIqZOnRqNGzde/oMaNYrp06fX+8VQDN54Kx2Q9NqgR97P6LXBBit8JsDq0HvnfaKiZbobdfL/Xlju9Yu/tIB4RER5k/znOzda5p4mzVtEm649YtaH7+X9LACA1a1///4r7Az+z3/+s8rvqHcUtN5668Wrr7663M9ffvnlvOY1QTF46513U+frd++W9zO6d+uaOv/wo8lRWVm5SnUB5Gv7o05KnS+snBsTnn50udfPn/1J6rxF+3Xzfmdd96zTc6O8nwMAsKaqd+iy//77x89//vNYsGBBrc/mz58f559/fgwaNKigxUHWZs6clTrv3Klj3s/o0rlTrbGZs/Jv0wdYWT2/tkdsvNdBqbFx9/w5lixauJw7ImZ/ODF13mWz/KdXdt54q1pjzdq2z/s5AABrqnpPL/rZz34Wd911V2y00UZx6qmnRt++fSMi4o033oirrroqlixZEueee25mhUKhzZ8/P5Z8abvTiIjmzZvl/ZxmTZvWGps7V6cLsHo0bdUmDvrFH1JjVXPnxJhrLlrhfRNfeCK2GvytmvOOfTaNdt17xcxJ767gri/02H6XOgOWJi1a1et+AKDIJcnSo1QUaa31Dl06deoUTz75ZHz/+9+Pc845p2beU5Ikse+++8ZVV10VnTrV/o0/FKvKynm1xpquxB7uzZrVDmoq59V+NkAWBo+4Idp165kae+DSn8TcGVNXeN/4Jx6K6iVLoqy8PCIikrKy+PpxZ8T9F55Wr/d+/YQz6xxv0rxFve4HAFgb1Dt0iYjo0aNH/Otf/4qZM2fGO++8E7lcLjbccMNo167dV98MRWZ+HVPlmjRpUseVK1ZRUfue+fPnr1RNAPnY4wfDY+O9D06NvTH6H/H8bX/8yntn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N46ysqUJUseOHWPixImxySabRJs2bWLSpEkFLxBWh44d1427/joy9jnwGzVhyuLFi+OKq/4QV1z1h6ioqIiysrKYP39+rXvLy8vj5uuvjo372ioaWDXr9tmk1libruvHoOG/X6nnzfrwvXpN+6lo2Tq2OGBIbHHAkIhYGqZUzZ0T5Y0aL7cLZsnChXH3OcfHa/+5a6VqA/gqz73wUjz34st1fjb22RdqjV17w/J3UDv6iEOiVav6dfUBFFLeocs222wTzz77bGy44Yax++67x3nnnRczZsyIm2++OTbffPMsaoTVYqd+O8TD/7o7DvvmcfHBhx+lPquqqqrznnbt2sbN118VB+w3YHWUCLBalJWXR7M27Zb7+bS3Xo27zzkhJv+v9g89AIVy339Gx4W/urze15887KfL/Wy/vfsLXYAGkfekp4suuii6dOkSERG//OUvo127dvH9738/pk+fHtddd13BC4TVacftt43Xnn8ifnb2sFh3nXWWe13r1q3itO9/J9544UmBC1DS/vuHX8XrD94T82fPXOF1uerqmDRubNz9k+PjmsHbCVwAYE2XJKV3FKG8O1223/6L3RQ6duwYo0aNKmhB0NBatWoZ/3feOTH83LPi+Rdfipdf/V9Mn/5x5CIXHdq3j0033ij67bBdNGnSpKFLBdYwI4/Ze7W/83+j7oj/jbojIiI69Nwo1unZN9p06R4VLVtFRETV3E/jk4nj46NXn495M2es9voAAEpZ3qELrC3Ky8tjx+23jR2337ahSwFYLT6e8FZ8POGthi4DICIihp8zLIafM6yhywBYJXmHLj179oxkBW0777777ioVBAAAADS04t2GuW7FWWveocvpp5+eOl+0aFG8+OKLMWrUqPjxj39cqLoAAAAASlreocsPf/jDOsevuuqqeO6551a5IAAAAIA1QcH6bwYOHBh33nlnoR4HAAAAUNIKtpDuHXfcEe3bty/U4wAAAICGUsTbMNepSGvNO3TZZpttUgvp5nK5mDJlSkyfPj2uvvrqghYHAAAAUKryDl0OPvjgVOhSVlYW6667bvTv3z823njjghYHAAAAUKryDl2GDx+eQRkAAABA0UhKbMvoIq0176rKy8tj2rRptcY//vjjKC8vL0hRAAAAAKUu79All8vVOV5VVRVNmjRZ5YIAAAAA1gT1nl70u9/9LiIikiSJ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\n"},"metadata":{}}]},{"cell_type":"code","source":["# Printing classification report\n","print(\"Classification report:\\n\", classification_report(y_test, y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"d89W52yNAEwg","executionInfo":{"status":"ok","timestamp":1728245888750,"user_tz":-360,"elapsed":17,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"0ae1cf59-28d0-487f-cf7f-bb955d58434a"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["Classification report:\n","               precision    recall  f1-score   support\n","\n","           0       1.00      0.83      0.91        12\n","           1       0.78      0.97      0.87        30\n","           2       0.94      0.71      0.81        21\n","\n","    accuracy                           0.86        63\n","   macro avg       0.91      0.84      0.86        63\n","weighted avg       0.88      0.86      0.86        63\n","\n"]}]},{"cell_type":"code","source":["# Calculating metrics\n","accuracy_knn = metrics.accuracy_score(y_test, y_pred)\n","precision_knn = metrics.precision_score(y_test, y_pred, average=None)\n","recall_knn = metrics.recall_score(y_test, y_pred, average=None)\n","f1_score_knn = metrics.f1_score(y_test, y_pred, average=None)"],"metadata":{"id":"0TPSuyIuAGbr","executionInfo":{"status":"ok","timestamp":1728245888751,"user_tz":-360,"elapsed":14,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["# Printing metrics rounded to two decimal points\n","print(\"Accuracy:\", round(accuracy_knn, 4))\n","print(\"Precision:\", [round(p, 4) for p in precision_knn], round(sum(precision_knn) / len(precision_knn), 4))\n","print(\"Recall:\", [round(r, 4) for r in recall_knn], round(sum(recall_knn) / len(recall_knn), 4))\n","print(\"F1-Score:\", [round(f, 4) for f in f1_score_knn], round(sum(f1_score_knn) / len(f1_score_knn), 4))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6hagDPAGAISX","executionInfo":{"status":"ok","timestamp":1728245888752,"user_tz":-360,"elapsed":13,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"c1ebdef0-20bd-448a-ab11-72c874e2cdc2"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.8571\n","Precision: [1.0, 0.7838, 0.9375] 0.9071\n","Recall: [0.8333, 0.9667, 0.7143] 0.8381\n","F1-Score: [0.9091, 0.8657, 0.8108] 0.8619\n"]}]}]}