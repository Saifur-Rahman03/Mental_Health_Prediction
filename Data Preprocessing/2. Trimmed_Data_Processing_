{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import re"],"metadata":{"id":"Mg3oN6Th5Oc9","executionInfo":{"status":"ok","timestamp":1728241723998,"user_tz":-360,"elapsed":493,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}}},"execution_count":33,"outputs":[]},{"cell_type":"markdown","source":["# Upload CSV File"],"metadata":{"id":"Fe_wNoG542Lg"}},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')\n","\n","file_path = '/content/drive/My Drive/Colab Notebooks/Mental Health Research/Data Preprocessing/'\n","\n","df = pd.read_csv(file_path + 'updated_mental_health_dataset_Trimmed.csv')"],"metadata":{"id":"hBz_KFOf481w","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1728241728434,"user_tz":-360,"elapsed":3926,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"80d9c19e-bb25-4ee5-fe3f-af26e037ff52"},"execution_count":34,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["df.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jEQUqlA_5hMS","executionInfo":{"status":"ok","timestamp":1728241728435,"user_tz":-360,"elapsed":46,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"0cd6d855-d502-4f88-d01f-2100beab8e22"},"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Academic Pressure', 'Syllabus Size', 'Cooperation Teachers/Peers',\n","       'Satisfaction on Result', 'Hopefulness about Future',\n","       'Suicidal Thoughts (Academic Stress)', 'Surrounding Condition',\n","       'Food Quality', 'Relationship with Parents',\n","       'Relationships with Siblings', 'Financial Support to Family',\n","       'Receiving Financial Support', 'Family Pressure', 'Family Expectations',\n","       'Self Confidence Level', 'Communication Skill', 'Concentration Level',\n","       'Loneliness Level', 'Frequency of Crying', 'Time Spent on Social Media',\n","       'Number of Friends', 'Work-Personal Life Balance',\n","       'Overthinking Frequency', 'Getting Upset Easily',\n","       'Desire to Escape Reality', 'Frequency of Death Thoughts',\n","       'Responsibility for Negative Events'],\n","      dtype='object')"]},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["len(df.columns)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WZb7igVG7BMl","executionInfo":{"status":"ok","timestamp":1728241728436,"user_tz":-360,"elapsed":44,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"98e4052e-4ce3-4376-ef2d-a14778cc00a1"},"execution_count":36,"outputs":[{"output_type":"execute_result","data":{"text/plain":["27"]},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["len(df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hxEmubnVB1LN","executionInfo":{"status":"ok","timestamp":1728241728436,"user_tz":-360,"elapsed":41,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"a02dec92-e53f-4a72-d1fb-cb5042e3d1e4"},"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["314"]},"metadata":{},"execution_count":37}]},{"cell_type":"markdown","source":["# Classifying Columns on Impact Basis"],"metadata":{"id":"B6VCCzmU9d3v"}},{"cell_type":"code","source":["columns = df.columns\n","\n","# List of columns with a positive impact on mental health\n","positive_columns = ['Cooperation Teachers/Peers', 'Satisfaction on Result', 'Hopefulness about Future',\n","                     'Surrounding Condition', 'Food Quality', 'Relationship with Parents',\n","                     'Relationships with Siblings', 'Receiving Financial Support',\n","                     'Self Confidence Level', 'Communication Skill', 'Concentration Level',\n","                     'Number of Friends', 'Work-Personal Life Balance']\n","\n","# Create lists for positive and negative columns\n","positive = [col for col in columns if col in positive_columns]\n","negative = [col for col in columns if col not in positive_columns]\n","\n","# Print the lists\n","print(\"Positive Columns:\", positive)\n","print(\"\\nNegative Columns:\", negative)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ci1Sehkr7Qt2","executionInfo":{"status":"ok","timestamp":1728241728437,"user_tz":-360,"elapsed":40,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"b9f82561-a728-4ef2-fe7d-362bd8a5f51f"},"execution_count":38,"outputs":[{"output_type":"stream","name":"stdout","text":["Positive Columns: ['Cooperation Teachers/Peers', 'Satisfaction on Result', 'Hopefulness about Future', 'Surrounding Condition', 'Food Quality', 'Relationship with Parents', 'Relationships with Siblings', 'Receiving Financial Support', 'Self Confidence Level', 'Communication Skill', 'Concentration Level', 'Number of Friends', 'Work-Personal Life Balance']\n","\n","Negative Columns: ['Academic Pressure', 'Syllabus Size', 'Suicidal Thoughts (Academic Stress)', 'Financial Support to Family', 'Family Pressure', 'Family Expectations', 'Loneliness Level', 'Frequency of Crying', 'Time Spent on Social Media', 'Overthinking Frequency', 'Getting Upset Easily', 'Desire to Escape Reality', 'Frequency of Death Thoughts', 'Responsibility for Negative Events']\n"]}]},{"cell_type":"code","source":["print(len(positive))\n","print(len(negative))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"B8XS4ZN07Zdo","executionInfo":{"status":"ok","timestamp":1728241728438,"user_tz":-360,"elapsed":39,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"3e2d531d-4be5-432a-c469-85f9dc2f60a9"},"execution_count":39,"outputs":[{"output_type":"stream","name":"stdout","text":["13\n","14\n"]}]},{"cell_type":"markdown","source":["# Map to Replace Positive Impacted Columns"],"metadata":{"id":"M5iT0NUw9oh_"}},{"cell_type":"markdown","source":["Before Mapping"],"metadata":{"id":"LGLK5a8j9ljx"}},{"cell_type":"code","source":["# Specify the column for which you want to count distinct values\n","column_name = 'Food Quality'  # Replace 'YourColumnName' with the actual column name\n","\n","# Get the value counts for each distinct value in the specified column\n","value_counts = df[column_name].value_counts()\n","\n","# Print the result\n","print(f\"Value counts for each distinct value in '{column_name}' column:\\n{value_counts}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LNJwxyx98Q5a","executionInfo":{"status":"ok","timestamp":1728241728438,"user_tz":-360,"elapsed":37,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"edf8aacd-4a66-42dc-f8cc-87de7c742a49"},"execution_count":40,"outputs":[{"output_type":"stream","name":"stdout","text":["Value counts for each distinct value in 'Food Quality' column:\n","Food Quality\n","3    89\n","2    76\n","1    57\n","4    49\n","5    43\n","Name: count, dtype: int64\n"]}]},{"cell_type":"markdown","source":["Mapping"],"metadata":{"id":"3cGbAlko9vVl"}},{"cell_type":"code","source":["# Mapping for replacing values in positive columns\n","replace_mapping = {5: 1, 4: 2, 3: 3, 2: 4, 1: 5}\n","\n","# Iterate over positive columns and apply the mapping\n","for col in positive:\n","    df[col] = df[col].map(replace_mapping)"],"metadata":{"id":"Yko10CWS7vNu","executionInfo":{"status":"ok","timestamp":1728241728438,"user_tz":-360,"elapsed":35,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}}},"execution_count":41,"outputs":[]},{"cell_type":"markdown","source":["After Mapping"],"metadata":{"id":"I4UcggeJ9w4H"}},{"cell_type":"code","source":["# Get the value counts for each distinct value in the specified column\n","value_counts = df[column_name].value_counts()\n","\n","# Print the result\n","print(f\"Value counts for each distinct value in '{column_name}' column:\\n{value_counts}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iJFzxFbi84Mb","executionInfo":{"status":"ok","timestamp":1728241728439,"user_tz":-360,"elapsed":35,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"985d37d6-9489-4f22-ee06-05fb73e4e9c3"},"execution_count":42,"outputs":[{"output_type":"stream","name":"stdout","text":["Value counts for each distinct value in 'Food Quality' column:\n","Food Quality\n","3    89\n","4    76\n","5    57\n","2    49\n","1    43\n","Name: count, dtype: int64\n"]}]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":325},"id":"5t1RsY6fYj4P","executionInfo":{"status":"ok","timestamp":1728241728440,"user_tz":-360,"elapsed":34,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"21a3fb09-90ce-4fd2-a291-e40ba90d0108"},"execution_count":43,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Academic Pressure  Syllabus Size  Cooperation Teachers/Peers  \\\n","0                  5              4                           4   \n","1                  3              4                           1   \n","2                  5              5                           3   \n","3                  4              5                           4   \n","4                  3              3                           4   \n","\n","   Satisfaction on Result  Hopefulness about Future  \\\n","0                       5                         5   \n","1                       5                         1   \n","2                       3                         2   \n","3                       4                         3   \n","4                       5                         2   \n","\n","   Suicidal Thoughts (Academic Stress)  Surrounding Condition  Food Quality  \\\n","0                                    1                      4             1   \n","1                                    1                      2             4   \n","2                                    3                      3             5   \n","3                                    1                      1             1   \n","4                                    1                      4             5   \n","\n","   Relationship with Parents  Relationships with Siblings  ...  \\\n","0                          1                            1  ...   \n","1                          1                            2  ...   \n","2                          1                            1  ...   \n","3                          3                            1  ...   \n","4                          2                            2  ...   \n","\n","   Loneliness Level  Frequency of Crying  Time Spent on Social Media  \\\n","0                 4                    3                           2   \n","1                 4                    1                           4   \n","2                 3                    3                           3   \n","3                 2                    1                           5   \n","4                 4                    4                           4   \n","\n","   Number of Friends  Work-Personal Life Balance  Overthinking Frequency  \\\n","0                  1                           2                       4   \n","1                  2                           2                       3   \n","2                  3                           2                       4   \n","3                  4                           3                       3   \n","4                  5                           5                       5   \n","\n","   Getting Upset Easily  Desire to Escape Reality  \\\n","0                     2                       5.0   \n","1                     2                       1.0   \n","2                     4                       1.0   \n","3                     2                       4.0   \n","4                     5                       4.0   \n","\n","   Frequency of Death Thoughts  Responsibility for Negative Events  \n","0                          1.0                                   4  \n","1                          1.0                                   1  \n","2                          3.0                                   4  \n","3                          1.0                                   3  \n","4                          4.0                                   5  \n","\n","[5 rows x 27 columns]"],"text/html":["\n","  <div id=\"df-4105f603-dac2-4f82-8d78-30a30a216391\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Academic Pressure</th>\n","      <th>Syllabus Size</th>\n","      <th>Cooperation Teachers/Peers</th>\n","      <th>Satisfaction on Result</th>\n","      <th>Hopefulness about Future</th>\n","      <th>Suicidal Thoughts (Academic Stress)</th>\n","      <th>Surrounding Condition</th>\n","      <th>Food Quality</th>\n","      <th>Relationship with Parents</th>\n","      <th>Relationships with Siblings</th>\n","      <th>...</th>\n","      <th>Loneliness Level</th>\n","      <th>Frequency of Crying</th>\n","      <th>Time Spent on Social Media</th>\n","      <th>Number of Friends</th>\n","      <th>Work-Personal Life Balance</th>\n","      <th>Overthinking Frequency</th>\n","      <th>Getting Upset Easily</th>\n","      <th>Desire to Escape Reality</th>\n","      <th>Frequency of Death Thoughts</th>\n","      <th>Responsibility for Negative Events</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>5.0</td>\n","      <td>1.0</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>...</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>1.0</td>\n","      <td>3.0</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>4.0</td>\n","      <td>1.0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>...</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>4.0</td>\n","      <td>4.0</td>\n","      <td>5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 27 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4105f603-dac2-4f82-8d78-30a30a216391')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4105f603-dac2-4f82-8d78-30a30a216391 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4105f603-dac2-4f82-8d78-30a30a216391');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9d1274be-e361-41be-b60e-84aacabb9bfa\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9d1274be-e361-41be-b60e-84aacabb9bfa')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9d1274be-e361-41be-b60e-84aacabb9bfa button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":43}]},{"cell_type":"markdown","source":["# Creating Label"],"metadata":{"id":"faB7Itrc-Q9g"}},{"cell_type":"markdown","source":["Sum Each Person's Score"],"metadata":{"id":"D3GFsJtZ-TT4"}},{"cell_type":"code","source":["# Calculate the sum of values for each row\n","row_sums = df.sum(axis=1)\n","\n","# Create a new column 'score' with the calculated sums\n","df['score'] = row_sums"],"metadata":{"id":"vRaplzkJ-XBo","executionInfo":{"status":"ok","timestamp":1728241728440,"user_tz":-360,"elapsed":32,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}}},"execution_count":44,"outputs":[]},{"cell_type":"code","source":["print(df['score'].nunique())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"neDpTLvs_CSC","executionInfo":{"status":"ok","timestamp":1728241728440,"user_tz":-360,"elapsed":31,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"c6c6024c-c103-43fa-a4c1-192be80bc0a4"},"execution_count":45,"outputs":[{"output_type":"stream","name":"stdout","text":["67\n"]}]},{"cell_type":"code","source":["# Calculate the highest, lowest, and mean values of the 'score' column\n","highest_score = df['score'].max()\n","lowest_score = df['score'].min()\n","mean_score = df['score'].mean()\n","median_score = df['score'].median()\n","mode_score = df['score'].mode().iloc[0]\n","\n","# Calculate interquartile range (IQR)\n","q1 = df['score'].quantile(0.25)\n","q3 = df['score'].quantile(0.75)\n","iqr = q3 - q1\n","\n","# Print the results\n","print(f\"Highest Score: {highest_score}\")\n","print(f\"Lowest Score: {lowest_score}\")\n","print(f\"Mean Score: {mean_score}\")\n","print(f\"Median Score: {median_score}\")\n","print(f\"Mode Score: {mode_score}\")\n","print(f\"q1: {q1}\")\n","print(f\"q3: {q3}\")\n","print(f\"Interquartile Range (IQR): {iqr}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pTuO3DRc_eSV","executionInfo":{"status":"ok","timestamp":1728241728441,"user_tz":-360,"elapsed":29,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"58e508e0-1172-4d59-e7b6-d632e400d80e"},"execution_count":46,"outputs":[{"output_type":"stream","name":"stdout","text":["Highest Score: 115.0\n","Lowest Score: 40.0\n","Mean Score: 79.59554140127389\n","Median Score: 79.0\n","Mode Score: 68.0\n","q1: 68.0\n","q3: 90.0\n","Interquartile Range (IQR): 22.0\n"]}]},{"cell_type":"markdown","source":["Define Ranges"],"metadata":{"id":"B3kjUeybDH7K"}},{"cell_type":"code","source":["# Define the thresholds for classification\n","mild_threshold = 65\n","moderate_threshold = 90\n","severe_threshold = 115\n","\n","# Count the number of persons in each range\n","mild_count = (df['score'] <= mild_threshold).sum()\n","moderate_count = ((df['score'] > mild_threshold) & (df['score'] <= moderate_threshold)).sum()\n","severe_count = (df['score'] > moderate_threshold).sum()\n","\n","# Print the results\n","print(f\"Number of persons with scores in the Mild range (40-65): {mild_count}\")\n","print(f\"Number of persons with scores in the Moderate range (66-90): {moderate_count}\")\n","print(f\"Number of persons with scores in the Severe range (91-115): {severe_count}\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QvBV7q5sa1Wd","executionInfo":{"status":"ok","timestamp":1728241728441,"user_tz":-360,"elapsed":28,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"outputId":"83a3e590-83e1-4e6f-b60c-df5591418af6"},"execution_count":47,"outputs":[{"output_type":"stream","name":"stdout","text":["Number of persons with scores in the Mild range (40-65): 59\n","Number of persons with scores in the Moderate range (66-90): 177\n","Number of persons with scores in the Severe range (91-115): 78\n"]}]},{"cell_type":"code","source":["# Create a new column 'Depression Level' based on the defined ranges\n","df['Depression Level'] = pd.cut(df['score'],\n","                                bins=[-float('inf'), mild_threshold, moderate_threshold, float('inf')],\n","                                labels=['Mild', 'Moderate', 'Severe'])\n","\n","# Print the updated DataFrame\n","print(df[['score', 'Depression Level']])\n"],"metadata":{"id":"eZZA__WGCc2e","executionInfo":{"status":"ok","timestamp":1728241728441,"user_tz":-360,"elapsed":26,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"254b5f3d-1846-482d-a810-85dc76ccec69"},"execution_count":48,"outputs":[{"output_type":"stream","name":"stdout","text":["     score Depression Level\n","0     80.0         Moderate\n","1     59.0             Mild\n","2     80.0         Moderate\n","3     72.0         Moderate\n","4     94.0           Severe\n","..     ...              ...\n","309   74.0         Moderate\n","310   72.0         Moderate\n","311   90.0         Moderate\n","312   73.0         Moderate\n","313   68.0         Moderate\n","\n","[314 rows x 2 columns]\n"]}]},{"cell_type":"code","source":["# Replace labels with numerical values (0 for Mild, 1 for Moderate, 2 for Severe)\n","df['Label'] = df['Depression Level'].replace({'Mild': 0, 'Moderate': 1, 'Severe': 2})\n","\n","# Print the counts of each label\n","print(df['Label'].value_counts())\n","print(df['Depression Level'].value_counts())"],"metadata":{"id":"ScDSJSG-DGJO","executionInfo":{"status":"ok","timestamp":1728241728442,"user_tz":-360,"elapsed":25,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"f0ca7621-5d10-491c-de05-a99937e8eb21"},"execution_count":49,"outputs":[{"output_type":"stream","name":"stdout","text":["Label\n","1    177\n","2     78\n","0     59\n","Name: count, dtype: int64\n","Depression Level\n","Moderate    177\n","Severe       78\n","Mild         59\n","Name: count, dtype: int64\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-49-d957957bc66c>:2: FutureWarning: Downcasting behavior in `replace` is deprecated and will be removed in a future version. To retain the old behavior, explicitly call `result.infer_objects(copy=False)`. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n","  df['Label'] = df['Depression Level'].replace({'Mild': 0, 'Moderate': 1, 'Severe': 2})\n","<ipython-input-49-d957957bc66c>:2: FutureWarning: The behavior of Series.replace (and DataFrame.replace) with CategoricalDtype is deprecated. In a future version, replace will only be used for cases that preserve the categories. To change the categories, use ser.cat.rename_categories instead.\n","  df['Label'] = df['Depression Level'].replace({'Mild': 0, 'Moderate': 1, 'Severe': 2})\n"]}]},{"cell_type":"markdown","source":["# Saving Dataset"],"metadata":{"id":"XlC5XwwtHxw-"}},{"cell_type":"code","source":["df.to_csv(file_path + 'main_dataset_mental_health.csv', index=False)"],"metadata":{"id":"Cx9V2n2iHMH8","executionInfo":{"status":"ok","timestamp":1728241729032,"user_tz":-360,"elapsed":612,"user":{"displayName":"Saifur Rahman","userId":"15512649432170958115"}}},"execution_count":50,"outputs":[]}]}